// This file collects (ideally) all the information available on all
// genus 2 curves whose Jacobians have RM and are absolutely simple
// and that are contained in the LMFDB, regarding BSD.

AttachSpec("Sha.spec");

RF := recformat<index : Integers(),    // the number in the list
                N : Integers(),        // the level
                C0 : CrvHyp,           // the reduced minimal Weierstrass model of the curve
                C : CrvHyp,            // a simplified model
                J : JacHyp,            // the Jacobian of C
                label : MonStgElt,     // the LMFDB label
                class : Integers(),    // the number of the isogeny class (1 = a, 2 = b, ...)
                f : ModFrmElt,         // one of the newforms attached to J
                L_rank : Integers(),   // the analytic rank of L(f, s)
                galreps,               // information on Galois representations with non-max. image
                non_ss : SeqEnum,      // sequence containing non-semisimple primes
                isog_deg : Integers(), // degree of the isogeny A_f --> J
                I_bounds : SeqEnum,    // multiplicative bound on the Heegner indices
                H_primes : SetEnum,    // primes dividing the Heegner indices (bounds)
                H_discs : SeqEnum,     // Heegner discriminants used
                H_fields : SeqEnum,    // the corresponding Heegner fields
                JQ_invs : SeqEnum,     // invariants of the group J(Q)
                JK_invs : SeqEnum,     // invariants of the groups J(K) for the Heegner fields
                JK_gens : List,        // list containing a sequence of generators of J(K) for each K
                H_points : List,       // the Heegner points in the various J(K)
                H_points_MW : List,    // the Heegner points as linear combination of the generators
                MWs : List,            // Mordell--Weil groups
                MWtoJKs : List,        // maps from Mordell--Weil groups to J(K)
                polar : SeqEnum,       // the two intersection numbers describing the polarization
                hseq : SeqEnum,        // the heights of the two components of the Heegner points
                                       // on A_f, computed via Gross-Zagier
                M : AlgMatElt,         // matrix quotient of height pairing matrices
                discO_Af : Integers(), // the discriminant of the coefficient ring of the newform
                discO_J : Integers(),  // the discriminant of the endomorphism ring of J
                Sha_an : Integers(),   // the analytic order of Sha
                TamJQ : Integers(),    // the Tamagawa product over Q
                TamJKs : SeqEnum,      // the Tamagawa product over Heegner fields K
                more>;                 // placeholder

//===========================================================================

// Find newform corresponding to a genus 2 curve with RM Jacobian of given level
function find_f(C, N)
// { Compute a newform associated to C of level N and the modular symbols space. }
    // C: genus 2 curve
    // N: level

    // determine representatives of all Galois orbits of size 2 of newforms at level N
    nf := [* e[1] : e in Newforms(CuspForms(N)) | #e eq 2 *];

    // for an increasing sequence of primes l not dividing disc(C),
    // compare the traces of a_l(f) with the relevant coefficient of the zeta function of C
    disc := Integers()!Discriminant(C);
    l := 1;
    repeat
      repeat l := NextPrime(l); until not IsDivisibleBy(disc, l);
      Tl := Numerator(ZetaFunction(BaseChange(C, Bang(Rationals(), GF(l)))));
      trC := -Coefficient(Tl, 1);
      nf := [* f : f in nf | trC eq Trace(Coefficient(f, l)) *];
      error if IsEmpty(nf), "no matching newform found";
    until #nf eq 1;
    f := nf[1];

    S := NewSubspace(CuspidalSubspace(ModularSymbols(N,2,0)));
    S := Kernel([<p, MinimalPolynomial(Coefficient(f, p))> : p in PrimesUpTo(l)], S);
    if Dimension(S) ne 2 * Genus(C) then
        error "Dimension(S) ne 2 * Genus(C): %o\n", Dimension(S);
    end if;
    f`mod_sym := S;
    return f, S;
end function;

load "Galreps.m";

// Data

// From the LMFDB:
labels := [* "529.a.529.1", "841.a.841.1", "961.a.961.1", "961.a.961.2", "961.a.961.3",
  "961.a.923521.1", "1225.a.6125.1", "1521.a.41067.1", "2601.a.70227.1", "4225.a.274625.1",
  "4489.a.4489.1", "4489.c.4489.1", "5329.a.5329.1", "5329.b.5329.1", "5929.b.717409.1",
  "7225.a.36125.1", "7225.b.614125.1", "7569.a.68121.1", "7569.a.613089.1", "7744.b.495616.1",
  "8649.a.77841.1", "8649.a.233523.1", "10609.a.10609.1", "11449.a.11449.1", "13225.b.330625.1",
  "15129.b.408483.1", "15625.a.15625.1", "16641.a.449307.1", "17689.c.17689.1", "17689.d.866761.1",
  "17689.e.866761.1", "18225.c.54675.1", "18225.c.164025.1", "21609.a.453789.1", "27225.a.81675.1",
  "27889.a.27889.1", "30976.a.495616.1", "31329.a.31329.1", "35344.a.565504.1", "36481.a.36481.1",
  "37249.a.37249.1", "42025.a.42025.1", "42849.b.385641.1", "43681.a.829939.1", "44521.a.44521.1",
  "45369.a.45369.1", "48841.a.48841.1", "49729.a.49729.1", "51529.a.51529.1", "60025.a.420175.1",
  "62500.a.1000000.1", "68121.c.613089.1", "68121.c.613089.2", "75625.a.75625.1", "75625.b.75625.1",
  "82369.a.82369.1", "83521.a.83521.1", "89401.a.89401.1", "91809.a.275427.1", "97969.a.97969.1",
  "103041.a.927369.1", "111556.a.446224.1", "127449.a.892143.1", "128164.a.512656.1", "140625.a.140625.1",
  "141376.b.565504.1", "141376.e.565504.1", "146689.a.146689.1", "151321.a.151321.1", "208849.a.208849.1",
  "212521.a.212521.1", "241081.a.241081.1", "249001.a.249001.1", "273529.a.273529.1", "284089.a.284089.1",
  "358801.a.358801.1", "385641.a.385641.1", "385641.c.385641.1", "405769.a.405769.1", "409600.a.409600.1",
  "409600.b.409600.1", "418609.a.418609.1", "458329.a.458329.1", "466489.a.466489.1", "474721.a.474721.1",
  "565504.a.565504.1", "565504.f.565504.1", "565504.j.565504.1", "613089.a.613089.1", "638401.a.638401.1",
  "654481.a.654481.1", "700569.b.700569.1", "707281.a.707281.1", "714025.a.714025.1", "769129.a.769129.1",
  "786769.a.786769.1", "863041.a.863041.1" *];

data := [*\
[*[*0, 0, 0, 0, 0, -1*], [*1, 1, 0, 1*]*],
[*[*2, 1, 3, 1, 1*], [*0, 1, 1, 1*]*],
[*[*-33, 99, -145, 74, -7, -1, -1*], [*1, 1, 0, 1*]*],
[*[*-7, 12, -18, 12, -8, 2, -1*], [*1, 1, 0, 1*]*],
[*[*-1, -1, 0, 1, 1, 1*], [*1, 1, 0, 1*]*],
[*[*-3, -2, 3, 4, -5*], [*1, 0, 1, 1*]*],
[*[*2, 1, 1, 2*], [*0, 0, 1, 1*]*],
[*[*2, 3, 4, 1, 1*], [*1, 0, 0, 1*]*],
[*[*0, 9, 7, -2, -3*], [*0, 1, 0, 1*]*],
[*[*1, 3, 10, 6, 4, 1*], [*1, 0, 0, 1*]*],
[*[*0, -1, 0, 0, 0, 1*], [*1, 1, 0, 1*]*],
[*[*18, 1, -21, -2, 7, 0, -1*], [*1, 0, 1, 1*]*],
[*[*-8, 31, -40, 25, -16, -8, -1*], [*1, 1, 0, 1*]*],
[*[*0, -1, 0, 1*], [*1, 0, 1, 1*]*],
[*[*-1, -2, -1, 1, 1, 1*], [*0, 1, 1*]*],
[*[*0, -1, -3, 0, 2, -1*], [*1, 0, 0, 1*]*],
[*[*32, 155, 176, 67, 0, -5, -1*], [*1, 0, 0, 1*]*],
[*[*-1, 1, -3, 1, -1*], [*1, 1, 0, 1*]*],
[*[*-5, 7, -15, 11, -10, 3, -1*], [*1, 1, 0, 1*]*],
[*[*-3, 8, 5, 7, 2, 1*], [**]*],
[*[*0, -2, 1, 1*], [*1, 1, 0, 1*]*],
[*[*-70, -47, 7, 3, -3*], [*1, 1, 0, 1*]*],
[*[*0, 1, 1*], [*1, 1, 0, 1*]*],
[*[*-1, -1, -1, 0, 1*], [*1, 0, 1, 1*]*],
[*[*0, 1, 1, 2*], [*1, 1, 0, 1*]*],
[*[*-1, -3, -8, -12, -14, -9, -5*], [*1*]*],
[*[*0, 0, 1, 2, 2, 2*], [*1, 1, 0, 1*]*],
[*[*-1, -2, -1, 1, 1, -3, -4*], [*1, 1, 1*]*],
[*[*0, 0, 1, 1, 2, 2*], [*1, 1, 0, 1*]*],
[*[*5, -7, -2, 0, 2*], [*1, 0, 1, 1*]*],
[*[*34, -13, -28, 7, 7, -1, -1*], [*1, 1, 0, 1*]*],
[*[*1, -23, 23, 5, -11, 0, 1*], [*1, 1, 0, 1*]*],
[*[*0, 1, 2, 1, 4, 0, 1*], [*1, 1, 0, 1*]*],
[*[*2, -3, 2, 0, -1*], [*1, 0, 0, 1*]*],
[*[*2, 3, 5, 2, 2*], [*1, 0, 0, 1*]*],
[*[*-1, -1, -1, 0, 0, 1*], [*1, 1, 0, 1*]*],
[*[*3, 8, -5, 7, -2, 1*], [**]*],
[*[*0, 1, 1, 1*], [*1, 1, 0, 1*]*],
[*[*1, -2, 1, 1, -1, 1*], [**]*],
[*[*0, -2, 1*], [*1, 1, 0, 1*]*],
[*[*0, 1, 1, -4*], [*1, 1, 0, 1*]*],
[*[*0, 1, 1, -3*], [*1, 1, 0, 1*]*],
[*[*2, 3, 3*], [*1, 0, 0, 1*]*],
[*[*3, 3, 1*], [*1, 1, 1, 1*]*],
[*[*4, 4, -8, -5, 5, 0, -1*], [*1, 0, 1, 1*]*],
[*[*-1, 1, -2*], [*1, 1, 0, 1*]*],
[*[*0, -1, 0, 1, 0, 1*], [*1, 1, 0, 1*]*],
[*[*-18, 2, 2, -6, -1, 1*], [*1, 0, 0, 1*]*],
[*[*-4, -1, 5, 1, -4, 1*], [*0, 1, 1*]*],
[*[*12, -14, 0, 0, 7, -5, 1*], [*1*]*],
[*[*-1, 5, -4, -8, 1, 2*], [*0, 1, 1*]*],
[*[*7, 22, 14, -3, 4*], [*1, 1, 0, 1*]*],
[*[*2, 7, 5, -3, -2*], [*1, 1, 0, 1*]*],
[*[*4, -4, -10, 0, 7, 5, 1*], [*1, 1, 0, 1*]*],
[*[*-7, 11, 0, -6, -1, 1*], [*1, 1, 0, 1*]*],
[*[*-2, 3, -4, 1, 0, -1*], [*1, 1, 0, 1*]*],
[*[*2, 2, -1, -4*], [*1, 0, 1, 1*]*],
[*[*-3, 1, 5, 2*], [*1, 0, 1, 1*]*],
[*[*-9, 9, 2, -2, -1*], [*0, 0, 0, 1*]*],
[*[*-2, -23, -26, 1, 8, 0, -1*], [*1, 0, 1, 1*]*],
[*[*8, -5, -14, 2, 6, 0, -1*], [*1, 1, 0, 1*]*],
[*[*-2, -8, 9, 5, -6, -1, 1*], [*0, 1, 1*]*],
[*[*3, -3, 5, -2, 2*], [*0, 0, 0, 1*]*],
[*[*8, -2, -10, 3, 5, -1, -1*], [*0, 1, 1*]*],
[*[*-4, 1, 1, 2, -3*], [*1, 1, 0, 1*]*],
[*[*1, 4, 3, -3, -1, 1*], [**]*],
[*[*1, -2, 2, -1, 0, 1*], [**]*],
[*[*0, -1, 0, 2*], [*1, 0, 1, 1*]*],
[*[*-17, 7, 17, -8, -3, 1*], [*0, 0, 0, 1*]*],
[*[*5, 0, -8, -5, 0, 1*], [*1, 1, 0, 1*]*],
[*[*-1, 2, -3*], [*1, 0, 1, 1*]*],
[*[*-1, 2, -2, -1, 1*], [*1, 0, 1, 1*]*],
[*[*0, 0, 1, 0, 2, 2*], [*1, 1, 0, 1*]*],
[*[*0, 0, 1, -7, 2, 2*], [*1, 1, 0, 1*]*],
[*[*7, 8, 15, 8, 8, 2, 1*], [*1, 0, 0, 1*]*],
[*[*-1, 0, -2, 0, -1, -1*], [*1, 1, 0, 1*]*],
[*[*-22, -30, 27, 6, -6*], [*1, 0, 0, 1*]*],
[*[*-1, -2, -1, 0, 1*], [*1, 1, 0, 1*]*],
[*[*0, 0, 1, 3, 2, 2*], [*1, 1, 0, 1*]*],
[*[*-3, 1, 24, -7, -29, -14, -2*], [**]*],
[*[*3, 1, -24, -7, 29, -14, 2*], [**]*],
[*[*0, 0, 0, -3, 0, -1*], [*1, 1, 0, 1*]*],
[*[*-1, -3, -3, 0, 0, -1*], [*1, 1, 0, 1*]*],
[*[*-1, 2, -2, 0, 0, -1*], [*0, 1, 1*]*],
[*[*1, -2, 1, 0, -1, 1*], [*0, 1, 1*]*],
[*[*-1, -2, -1, 1, 1, 1*], [**]*],
[*[*-1, 4, -3, -3, 1, 1*], [**]*],
[*[*-1, -2, -2, -1, 0, 1*], [**]*],
[*[*-1, 1, -4, 2, -2*], [*1, 1, 0, 1*]*],
[*[*-8, 1, 7, 0, -4*], [*1, 0, 1, 1*]*],
[*[*-1, -1, 0, 1, 2*], [*1, 0, 1, 1*]*],
[*[*-1, 12, -51, 36, 0, -6, 1*], [*1, 0, 0, 1*]*],
[*[*1, 5, 3, -8, -2, 1*], [*1, 1, 0, 1*]*],
[*[*1, 5, 5, 2, 1*], [*1, 0, 1, 1*]*],
[*[*1, 2, 2, 1, 0, -1*], [*0, 1, 1*]*],
[*[*-3, 1, 18, -8, -40, 9, 28*], [*1, 1, 0, 1*]*],
[*[*-2, -4, -4, -1, 1*], [*1, 0, 1, 1*]*]*];

// From g2c_curves_degree_of_polarization-integral.log (Timo, 2021-12-17)
poldegrees := [
    [ 1, 1 ], [ 1, 1 ], [ 1, 1 ], [ 1, 1 ], [ 1, 1 ], [ 1, 1 ], [ 1, 2 ], [ 1, 2 ], [ 2, 4 ],
    [ 2, 2 ], [ 2, 2 ], [ 2, 10 ], [ 2, 6 ], [ 2, 2 ], [ 1, 10 ], [ 2, 4 ], [ 2, 4 ], [ 2, 2 ],
    [ 2, 2 ], [ 1, 8 ], [ 4, 4 ], [ 4, 4 ], [ 2, 2 ], [ 2, 2 ], [ 4, 4 ], [ 2, 4 ], [ 2, 2 ],
    [ 2, 14 ], [ 4, 4 ], [ 4, 12 ], [ 4, 4 ], [ 6, 6 ], [ 6, 6 ], [ 4, 4 ], [ 4, 8 ], [ 2, 2 ],
    [ 2, 16 ], [ 4, 4 ], [ 6, 6 ], [ 2, 2 ], [ 2, 22 ], [ 4, 4 ], [ 4, 8 ], [ 4, 4 ], [ 2, 82 ],
    [ 4, 4 ], [ 4, 4 ], [ 2, 14 ], [ 2, 62 ], [ 4, 8 ], [ 2, 110 ], [ 8, 8 ], [ 8, 8 ], [ 12, 60 ],
    [ 4, 12 ], [ 4, 4 ], [ 2, 18 ], [ 4, 4 ], [ 4, 8 ], [ 2, 82 ], [ 4, 20 ], [ 4, 20 ], [ 8, 8 ],
    [ 4, 44 ], [ 4, 20 ], [ 8, 8 ], [ 8, 8 ], [ 2, 22 ], [ 12, 12 ], [ 2, 62 ], [ 2, 38 ], [ 2, 38 ],
    [ 2, 142 ], [ 2, 298 ], [ 2, 254 ], [ 2, 58 ], [ 12, 84 ], [ 12, 12 ], [ 12, 60 ], [ 16, 32 ],
    [ 16, 32 ], [ 2, 278 ], [ 2, 202 ], [ 2, 382 ], [ 16, 16 ], [ 24, 24 ], [ 16, 16 ], [ 16, 16 ],
    [ 12, 12 ], [ 4, 436 ], [ 24, 24 ], [ 12, 84 ], [ 30, 30 ], [ 24, 24 ], [ 14, 406 ], [ 4, 116 ],
    [ 40, 40 ] ];

isogeny_degrees := [
    11, 7, 20, 20, 5, 1, 4, 2, 4, 6, 1, 11, 3, 1, 2, 1, 3, 1, 4, 2, 1, 4,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 12, 3, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 5,
    1, 1, 1, 1, 1, 1, 4, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1 ];

Heegner_discs := [
    [ -7 ], [ -7 ], [ -15 ], [ -15 ], [ -11 ], [ -11 ], [ -19 ], [ -23 ], [ -35 ], [ -51 ],
    [ -7 ], [ -7 ], [ -19 ], [ -19 ], [ -19 ], [ -19 ], [ -19 ], [ -23 ], [ -23 ], [ -7 ],
    [ -11 ], [ -11 ], [ -11 ], [ -7 ], [ -11 ], [ -23 ], [ -11 ], [ -71 ], [ -31 ], [ -31 ],
    [ -31 ], [ -11 ], [ -11 ], [ -47 ], [ -131 ], [ -15 ], [ -7 ], [ -11 ], [ -15 ], [ -7 ],
    [ -7 ], [ -31 ], [ -11 ], [ -51 ], [ -7 ], [ -11 ], [ -35 ], [ -11 ], [ -15 ], [ -31 ],
    [ -31 ], [ -23 ], [ -23 ], [ -19 ], [ -39 ], [ -31 ], [ -19 ], [ -43 ], [ -23 ], [ -11 ],
    [ -71 ], [ -15 ], [ -47 ], [ -7 ], [ -11 ], [ -15 ], [ -15 ], [ -11 ], [ -7 ], [ -7 ],
    [ -19 ], [ -7 ], [ -7 ], [ -39 ], [ -23 ], [ -7 ], [ -11, -83 ], [ -11 ], [ -55 ], [ -31 ],
    [ -31 ], [ -15 ], [ -15 ], [ -7 ], [ -43 ], [ -15 ], [ -15 ], [ -15 ], [ -23 ], [ -15 ],
    [ -7 ], [ -11 ], [ -7 ], [ -51 ], [ -7 ], [ -23 ], [ -11 ] ];

JQ_invariants := [
    [ 11 ], [ 7 ], [], [ 5 ], [ 5 ], [ 5 ], [ 8 ], [ 14 ], [ 8 ], [ 6 ], [ 0, 0 ], [ 11 ],
    [], [ 0, 0 ], [ 2, 2 ], [ 2, 0, 0 ], [ 2 ], [ 5 ], [ 5 ], [ 4 ], [ 0, 0 ], [ 0, 0 ],
    [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 7 ], [ 0, 0 ], [], [ 0, 0 ], [ 9, 0, 0 ], [ 5 ], [ 3 ],
    [ 3 ], [ 2, 0, 0 ], [ 2, 0, 0 ], [ 0, 0 ], [ 2 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ],
    [ 0, 0 ], [ 2, 0, 0 ], [ 0, 0 ], [ 5 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [], [ 0, 0 ], [],
    [ 0, 0 ], [ 0, 0 ], [ 5 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [], [ 0, 0 ],
    [ 0, 0 ], [ 0, 0 ], [ 5 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ],
    [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ],
    [ 2, 2 ], [ 2, 2 ], [ 0, 0 ], [ 0, 0 ], [], [ 0, 0 ], [], [], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ],
    [ 0, 0 ], [], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ], [ 0, 0 ] ];

JK_invariants := [
    [ [ 11, 0, 0 ] ], [ [ 7, 0, 0 ] ], [ [ 0, 0 ] ], [ [ 5, 0, 0 ] ], [ [ 5, 0, 0 ] ],
    [ [ 5, 0, 0 ] ], [ [ 8, 0, 0 ] ], [ [ 14, 0, 0 ] ], [ [ 8, 0, 0 ] ], [ [ 6, 0, 0 ] ],
    [ [ 0, 0 ] ], [ [ 11, 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 2, 2, 0, 0 ] ],
    [ [ 2, 0, 0 ] ], [ [ 2, 0, 0 ] ], [ [ 5, 0, 0 ] ], [ [ 5, 0, 0 ] ], [ [ 4, 0, 0 ] ],
    [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 7, 0, 0 ] ],
    [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 9, 0, 0 ] ], [ [ 5, 0, 0 ] ], [ [ 3, 0, 0 ] ],
    [ [ 3, 0, 0 ] ], [ [ 2, 0, 0 ] ], [ [ 2, 0, 0 ] ], [ [ 0, 0 ] ], [ [ 2, 0, 0 ] ], [ [ 0, 0 ] ],
    [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 2, 0, 0 ] ], [ [ 0, 0 ] ],
    [ [ 5, 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ],
    [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 5, 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ],
    [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ],
    [ [ 0, 0 ] ], [ [ 5, 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ],
    [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ],
    [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ], [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ],
    [ [ 2, 2, 0, 0 ] ], [ [ 2, 2, 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ],
    [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ],
    [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ], [ [ 0, 0 ] ],
    [ [ 0, 0 ] ] ];

I_bounds := [ 121, 49, 5, 25, 25, 5, 32, 28, 32, 72, 1, 121, 3, 1, 16, 4, 12, 5, 5, 16, 4,
    4, 1, 1, 4, 7, 1, 1, 1, 9, 5, 9, 9, 4, 8, 1, 4, 1, 9, 1, 1, 1, 4, 2, 25, 1, 1,
    1, 1, 2, 1, 4, 4, 25, 1, 1, 1, 1, 2, 1, 1, 1, 2, 5, 1, 4, 4, 1, 2, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 16, 16, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1 ];

sha_an := [ 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 4, 4, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2,
    1, 1, 1, 1, 4, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1,
    4, 1, 1, 1, 1, 1, 4, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
    4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1 ];

discs_Lr := [ <5, 5, 0>, <8, 8, 0>, <5, 20, 0>, <5, 20, 0>, <5, 5, 0>, <5, 5, 0>, <17, 17, 0>,
    <8, 8, 0>, <17, 17, 0>, <12, 12, 0>, <5, 5, 1>, <5, 5, 0>, <13, 13, 0>, <5, 5, 1>,
    <20, 5, 0>, <8, 8, 1>, <12, 12, 0>, <5, 5, 0>, <5, 20, 0>, <17, 17, 0>, <5, 5, 1>,
    <5, 20, 1>, <5, 5, 1>, <5, 5, 1>, <5, 5, 1>, <8, 8, 0>, <5, 5, 1>, <8, 8, 0>, <5, 5, 1>,
    <13, 13, 1>, <5, 5, 0>, <13, 52, 0>, <13, 13, 0>, <8, 8, 1>, <8, 8, 1>, <5, 5, 1>,
    <17, 17, 0>, <5, 5, 1>, <5, 5, 1>, <5, 5, 1>, <5, 5, 1>, <5, 5, 1>, <8, 8, 1>, <8, 8, 1>,
    <5, 5, 0>, <5, 5, 1>, <5, 5, 1>, <8, 8, 1>, <5, 5, 0>, <8, 8, 1>, <5, 5, 0>, <5, 20, 1>,
    <5, 5, 1>, <5, 5, 0>, <13, 13, 1>, <5, 5, 1>, <13, 13, 1>, <5, 5, 1>, <8, 8, 1>, <5, 5, 0>,
    <5, 5, 1>, <5, 5, 1>, <8, 8, 1>, <5, 5, 0>, <5, 5, 1>, <5, 5, 1>, <5, 5, 1>, <5, 5, 1>,
    <8, 8, 1>, <5, 5, 1>, <5, 5, 1>, <5, 5, 1>, <5, 5, 1>, <5, 5, 1>, <8, 8, 0>, <5, 5, 1>,
    <8, 8, 1>, <5, 5, 1>, <5, 5, 1>, <20, 5, 0>, <20, 5, 0>, <5, 5, 1>, <5, 5, 1>, <5, 5, 0>,
    <5, 5, 1>, <5, 5, 0>, <5, 5, 0>, <5, 5, 1>, <5, 5, 1>, <5, 5, 1>, <5, 5, 1>, <8, 8, 0>,
    <5, 5, 1>, <5, 5, 1>, <5, 5, 1>, <5, 5, 1>, <5, 5, 1> ];

Mseq := [ [ 9, -5, -5, 4 ], [ 3, 2, 1, 3 ], [ 0, 0, 0, 0 ], [ 10, 20, 4, 10 ], [ 3, 4, 4, 7 ],
    [ 2, -1, -1, 1 ], [ 4, 8, 2, 6 ], [ 6, -8, -4, 6 ], [ 6, 8, 2, 8 ], [ 18, -30, -10, 18 ],
    [ 4, -2, -2, 2 ], [ 34, 52, 52, 86 ], [ 42, -54, -18, 24 ], [ 4, -2, -2, 2 ], [ 36, -22, -22, 14 ],
    [ 4, -4, -2, 4 ], [ 18, -30, -10, 18 ], [ 10, -6, -6, 4 ], [ 6, -10, -2, 6 ], [ 10, 24, 6, 16 ],
    [ 4, -4, -4, 8 ], [ 12, 20, 4, 12 ], [ 2, 2, 2, 4 ], [ 2, 2, 2, 4 ], [ 8, 12, 12, 20 ],
    [ 4, -4, -2, 4 ], [ 10, -6, -6, 4 ], [ 10, 12, 6, 10 ], [ 8, -4, -4, 4 ], [ 12, -12, -4, 8 ],
    [ 8, -4, -4, 4 ], [ 30, -78, -6, 30 ], [ 12, 18, 6, 18 ], [ 12, -16, -8, 12 ], [ 8, 8, 4, 8 ],
    [ 10, -6, -6, 4 ], [ 20, 48, 12, 32 ], [ 8, 4, 4, 4 ], [ 12, -6, -6, 6 ], [ 10, -6, -6, 4 ],
    [ 10, -14, -14, 24 ], [ 8, -4, -4, 4 ], [ 8, 8, 4, 8 ], [ 12, -16, -8, 12 ], [ 106, -62, -62, 44 ],
    [ 20, -12, -12, 8 ], [ 8, 12, 12, 20 ], [ 26, -36, -18, 26 ], [ 14, 4, 4, 10 ], [ 8, -8, -4, 8 ],
    [ 166, -102, -102, 64 ], [ 56, 120, 24, 56 ], [ 16, -8, -8, 8 ], [ 120, 180, 180, 300 ],
    [ 8, -12, -4, 12 ], [ 20, -12, -12, 8 ], [ 24, 30, 10, 14 ], [ 20, -12, -12, 8 ], [ 8, -8, -4, 8 ],
    [ 14, -16, -16, 30 ], [ 12, 16, 16, 28 ], [ 12, 4, 4, 8 ], [ 24, -32, -16, 24 ], [ 36, 20, 20, 16 ],
    [ 12, 16, 16, 28 ], [ 104, -64, -64, 40 ], [ 16, 24, 24, 40 ], [ 18, -10, -10, 8 ],
    [ 36, -48, -24, 36 ], [ 82, -50, -50, 32 ], [ 22, -12, -12, 10 ], [ 14, 20, 20, 34 ],
    [ 18, 20, 20, 38 ], [ 36, -50, -50, 86 ], [ 34, -36, -18, 34 ], [ 26, -14, -14, 12 ],
    [ 60, 72, 36, 60 ], [ 60, -36, -36, 24 ], [ 36, 48, 48, 84 ], [ 64, 96, 96, 160 ],
    [ 64, -32, -32, 32 ], [ 40, 58, 58, 98 ], [ 26, 8, 8, 18 ], [ 48, -70, -70, 118 ],
    [ 32, -16, -16, 16 ], [ 48, 72, 72, 120 ], [ 32, 48, 48, 80 ], [ 32, 48, 48, 80 ],
    [ 24, -12, -12, 12 ], [ 92, -48, -48, 44 ], [ 120, -72, -72, 48 ], [ 36, -24, -12, 36 ],
    [ 150, 240, 240, 390 ], [ 48, 24, 24, 24 ], [ 308, -182, -182, 126 ], [ 36, 52, 52, 88 ],
    [ 80, -40, -40, 40 ] ];

tamagawa_products := [ 1, 1, 1, 1, 1, 5, 2, 7, 2, 4, 1, 1, 1, 1, 4, 2, 2, 5, 5, 4, 4, 2, 1,
1, 4, 7, 1, 1, 1, 3, 5, 1, 1, 4, 2, 1,
1, 1, 9, 1, 1, 1, 4, 2, 1, 1, 1, 1, 1, 2,
1,
2, 4, 1, 1, 1, 1, 1, 2, 1, 1,
1, 2,
5, 1, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ];

/*
galreps := [*
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"A5"}> ,
  <11, [ -1, -1, 1 ], [[ 11, 0 ], [ 7, 1 ]], {"R"}> ],
[ <7, [ -2, 0, 1 ], [[ 7, 0 ], [ 3, 1 ]], {"R"}> ],
[ <5, [ -1, -1, 1 ], [[ 5, 0 ], [ 2, 1 ]], {"S4", "R"}> ],
[ <5, [ -1, -1, 1 ], [[ 5, 0 ], [ 2, 1 ]], {"S4", "R"}> ],
[ <5, [ -1, -1, 1 ], [[ 5, 0 ], [ 2, 1 ]], {"S4", "R"}> ],
[ <5, [ -1, -1, 1 ], [[ 5, 0 ], [ 2, 1 ]], {"S4", "R"}> ],
[ <2, [ -4, -1, 1 ], [[ 2, 0 ], [ 2, 1 ]], {"Nns", "R"}> ],
[ <2, [ -2, 0, 1 ], [[ 2, 0 ], [ 0, 1 ]], {"Nns", "R"}> ,
  <7, [ -2, 0, 1 ], [[ 7, 0 ], [ 3, 1 ]], {"R"}> ],
[ <2, [ -4, -1, 1 ], [[ 2, 0 ], [ 2, 1 ]], {"Nns", "R"}> ,
  <3, [ -4, -1, 1 ], [[ 3, 0 ]], {"A5"}> ],
[ <2, [ -3, 0, 1 ], [[ 2, 0 ], [ 1, 1 ]], {"Nns", "R"}> ,
  <3, [ -3, 0, 1 ], [[ 3, 0 ], [ 0, 1 ]], {"R"}> ],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"L", "A5"}> ],
[ <11, [ -1, -1, 1 ], [[ 11, 0 ], [ 7, 1 ]], {"R"}> ],
[ <3, [ -3, -1, 1 ], [[ 3, 0 ], [ 0, 1 ]], {"R"}> ],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"L", "A5"}> ],
[ <2, [ -1, -1, 1 ], [[ 2, 0 ]], {"Nns", "R"}> ],
[ <2, [ -2, 0, 1 ], [[ 2, 0 ], [ 0, 1 ]], {"Nns", "R"}> ],
[ <2, [ -3, 0, 1 ], [[ 2, 0 ], [ 1, 1 ]], {"Nns", "R"}> ,
  <3, [ -3, 0, 1 ], [[ 3, 0 ], [ 0, 1 ]], {"R"}> ],
[ <5, [ -1, -1, 1 ], [[ 5, 0 ], [ 2, 1 ]], {"S4", "R"}> ],
[ <5, [ -1, -1, 1 ], [[ 5, 0 ], [ 2, 1 ]], {"S4", "R"}> ],
[ <2, [ -4, -1, 1 ], [[ 2, 0 ], [ 2, 1 ]], {"Nns", "R"}> ,
  <2, [ -4, -1, 1 ], [[ 2, 0 ], [ 1, 1 ]], {"Nns"}> ],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"A5"}> ],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"A5"}> ],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"L", "A5"}> ],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"A5"}> ],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"A5"}> ],
[ <3, [ -2, 0, 1 ], [[ 3, 0 ]], {"A5"}> ,
  <7, [ -2, 0, 1 ], [[ 7, 0 ], [ 4, 1 ]], {"R"}> ],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"A5"}> ,
  <5, [ -1, -1, 1 ], [[ 5, 0 ], [ 2, 1 ]], {"S4", "R"}> ],
[ <3, [ -2, 0, 1 ], [[ 3, 0 ]], {"A5"}> ],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"L", "A5"}> ],
[ <3, [ -3, -1, 1 ], [[ 3, 0 ], [ -1, 1 ]], {"R"}> ],
[ <5, [ -1, -1, 1 ], [[ 5, 0 ], [ 2, 1 ]], {"S4", "R"}> ],
[ <3, [ -3, -1, 1 ], [[ 3, 0 ], [ 0, 1 ]], {"Nns", "R"}> ],
[ <3, [ -3, -1, 1 ], [[ 3, 0 ], [ 0, 1 ]], {"Nns", "R"}> ],
[ <2, [ -2, 0, 1 ], [[ 2, 0 ], [ 0, 1 ]], {"Nns", "R"}> ,
  <7, [ -2, 0, 1 ], [[ 7, 0 ], [ 3, 1 ]], {"R"}> ],
[ <2, [ -2, 0, 1 ], [[ 2, 0 ], [ 0, 1 ]], {"Nns", "R"}> ],
[],
[ <2, [ -4, -1, 1 ], [[ 2, 0 ], [ 2, 1 ]], {"Nns"}> ,
  <2, [ -4, -1, 1 ], [[ 2, 0 ], [ 1, 1 ]], {"Nns", "R"}> ],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"A5"}> ],
[ <2, [ -1, -1, 1 ], [[ 2, 0 ]], {"Nns"}> ,
  <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"A5"}> ],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"A5"}> ],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"L", "A5"}> ],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"A5"}> ],
[ <2, [ -2, 0, 1 ], [[ 2, 0 ], [ 0, 1 ]], {"Nns", "R"}> ,
  <3, [ -2, 0, 1 ], [[ 3, 0 ]], {"A5"}> ],
[],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"A5"}> ,
  <5, [ -1, -1, 1 ], [[ 5, 0 ], [ 2, 1 ]], {"S4", "R"}> ],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"A5"}> ],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"A5"}> ],
[],
[],
[ <2, [ -2, 0, 1 ], [[ 2, 0 ], [ 0, 1 ]], {"Nns"}> ,
  <3, [ -2, 0, 1 ], [[ 3, 0 ]], {"L"}> ,
  <7, [ -2, 0, 1 ], [[ 7, 0 ], [ 4, 1 ]], {"R"}> ],
[ <5, [ -1, -1, 1 ], [[ 5, 0 ], [ 4, 2 ]], {"S4", "R"}> ],
[],
[],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"A5"}> ,
  <5, [ -1, -1, 1 ], [[ 5, 0 ], [ 2, 1 ]], {"S4", "R"}> ],
[ <3, [ -3, -1, 1 ], [[ 3, 0 ], [ -1, 1 ]], {"R"}> ],
[],
[ <3, [ -3, -1, 1 ], [[ 3, 0 ], [ -1, 1 ]], {"R"}> ,
  <17, [ -3, -1, 1 ], [[ 17, 0 ], [ 12, 1 ]], {"R"}> ],
[],
[],
[],
[],
[],
[],
[ <5, [ -1, -1, 1 ], [[ 5, 0 ], [ 2, 1 ]], {"S4", "R"}> ],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"A5"}> ,
  <5, [ -1, -1, 1 ], [[ 5, 0 ], [ 2, 1 ]], {"S4", "R"}> ],
[ <2, [ -1, -1, 1 ], [[ 2, 0 ]], {"Nns"}> ],
[ <2, [ -1, -1, 1 ], [[ 2, 0 ]], {"Nns"}> ],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"A5"}> ],
[],
[],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"A5"}> ],
[],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"A5"}> ],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"L", "A5"}> ],
[],
[],
[ <3, [ -2, 0, 1 ], [[ 3, 0 ]], {"A5"}> ],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"A5"}> ],
[ <2, [ -1, -1, 1 ], [[ 2, 0 ]], {"R"}> ,
  <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"L", "A5"}> ],
[ <2, [ -1, -1, 1 ], [[ 2, 0 ]], {"Nns", "R"}> ],
[ <2, [ -1, -1, 1 ], [[ 2, 0 ]], {"Nns", "R"}> ],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"A5"}> ],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"A5"}> ],
[],
[],
[ <2, [ -1, -1, 1 ], [[ 2, 0 ]], {"Nns"}> ,
  <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"A5"}> ],
[ <2, [ -1, -1, 1 ], [[ 2, 0 ]], {"Nns"}> ],
[ <2, [ -1, -1, 1 ], [[ 2, 0 ]], {"Nns"}> ],
[],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"A5"}> ],
[],
[],
[ <29, [ -1, -1, 1 ], [[ 29, 0 ], [ 5, 1 ]], {"R"}> ],
[ <2, [ -1, -1, 1 ], [[ 2, 0 ]], {"R"}> ,
  <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"A5"}> ],
[],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"A5"}> ],
[ <3, [ -1, -1, 1 ], [[ 3, 0 ]], {"A5"}> ] *];

function reconstruct_galrep(entry)
  // reconstruct the prime ideal from the info above
  O := EquationOrder(Polynomial(entry[2]));
  assert IsMaximal(O);
  assert Polynomial(entry[2]) eq MinimalPolynomial(O.2);
  id := ideal<O | [O!g : g in entry[3]]>;
  dec := Decomposition(O, entry[1]);
  dec := [e[1] : e in dec | e[1] eq id];
  assert #dec eq 1;
  return dec[1];
end function;
*/

//===========================================================================

// Number of database entries.
number := #data;
assert number eq #labels;
assert number eq #poldegrees;
assert number eq #isogeny_degrees;
assert number eq #Heegner_discs;
assert number eq #JQ_invariants;
assert number eq #JK_invariants;
assert number eq #I_bounds;
assert number eq #sha_an;
//assert number eq #galreps;
assert number eq #discs_Lr;
assert number eq #Mseq;
assert number eq #tamagawa_products;

load "Galreps.m";

//============================================================================

// Initialize:
DB := [rec<RF | index := j> : j in [1..number]];

// RF := recformat<index : Integers(),    // the number in the list
//                 N : Integers(),        // the level
//                 C0 : CrvHyp,           // the reduced minimal Weierstrass model of the curve
//                 C : CrvHyp,            // a simplified model
//                 J : JacHyp,            // the Jacobian of C
//                 label : MonStgElt,     // the LMFDB label
//                 class : Integers(),    // the number of the isogeny class (1 = a, 2 = b, ...)
//                 f : ModFrmElt,         // one of the newforms attached to J
//                 L_rank : Integers(),   // the analytic rank of L(f, s)
//                 galreps,               // information on Galois representations with non-max. image
//                 non_ss : SeqEnum,      // sequence containing non-semisimple primes
//                 isog_deg : Integers(), // degree of the isogeny A_f --> J
//                 I_bound : Integers(),  // multiplicative bound on the Heegner index
//                 H_primes : SetEnum,    // primes dividing the Heegner index (bound)
//                 H_discs : SeqEnum,     // Heegner discriminants used
//                 H_fields : SeqEnum,    // the corresponding Heegner fields
//                 JQ_invs : SeqEnum,     // invariants of the group J(Q)
//                 JK_invs : SeqEnum,     // invariants of the groups J(K) for the Heegner fields
//                 JK_gens : List,        // list containing a sequence of generators of J(K) for each K
//                 H_points : List,       // the Heegner points in the various J(K)
//                 H_points_MW : List,    // the Heegner points as linear combination of the generators
//                 polar : SeqEnum,       // the two intersection numbers describing the polarization
//                 hseq : SeqEnum,        // the heights of the two components of the Heegner points
//                                        // on A_f, computed via Gross-Zagier
//                 M : AlgMatElt,         // matrix quotient of height pairing matrices
//                 discO_Af : Integers(), // the discriminant of the coefficient ring of the newform
//                 discO_J : Integers(),  // the discriminant of the endomorphism ring of J
//                 Sha_an : Integers(),   // the analytic order of Sha
//                 more>;                 // placeholder

// Fill in data from the above.
char_base := StringToCode("a") - 1;
for j := 1 to number do
  label := labels[j];
  DB[j]`label := label;
  Cdata := data[j];
  lsplit := Split(label, ".");
  cond := StringToInteger(lsplit[1]);
  flag, level := IsSquare(cond); assert flag;
  DB[j]`N := level;
  DB[j]`non_ss := [p : p in PrimeDivisors(level) | Valuation(level, p) ge 2];
  assert #lsplit[2] eq 1; // need to adapt when more than 26 isogeny classes are present...
  DB[j]`class := StringToCode(lsplit[2]) - char_base;
  C0 := HyperellipticCurve(Polynomial(Rationals(), [c : c in Cdata[1]]),
                           Polynomial(Rationals(), [c : c in Cdata[2]]));
  assert Genus(C0) eq 2;
  DB[j]`C0 := C0;
  C := SimplifiedModel(C0);
  DB[j]`C := C;
  DB[j]`J := Jacobian(C);
  DB[j]`f := find_f(C0, level);
  DB[j]`polar := poldegrees[j];
  DB[j]`isog_deg := isogeny_degrees[j];
  DB[j]`galreps := galrep_info(DB[j]`f, 100);
  // [*<reconstruct_galrep(e), e[4]> : e in galreps[j]*]; // Split(galreps[j], ";");
  DB[j]`H_discs := Heegner_discs[j];
  DB[j]`JQ_invs := JQ_invariants[j];
  DB[j]`JK_invs := JK_invariants[j];
  //DB[j]`I_bound := I_bounds[j];
  //DB[j]`H_primes := I_bounds[j] eq 0 select {} else Set(PrimeDivisors(I_bounds[j]));
  DB[j]`Sha_an := sha_an[j];
  dAf, dJ, Lr := Explode(discs_Lr[j]);
  DB[j]`discO_Af := dAf;
  DB[j]`discO_J := dJ;
  DB[j]`L_rank := Lr;
  DB[j]`TamJQ := tamagawa_products[j];
  M := Matrix(Integers(), 2, 2, Mseq[j]);
  if M ne Parent(M)!0 then
    DB[j]`M := M;
    // Check the determinant relation.
    assert Determinant(M) eq isogeny_degrees[j]*&*poldegrees[j];
  end if;
  printf "entry %o done\n", j;
end for;


// Fill in Heegner points. (Instructions generated by a program.)
printf "filling in Heegner points...\n";
hps := [* *];
K<w> := NumberField(Polynomial([ 7, 0, 1 ]));
JK := BaseChange(DB[1]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1/4*(w + 1), 1/4*(w - 1), 1 ]),
                      Polynomial(K, [ 1/2*w, 1/8*(-w - 15) ]), 2>);
DB[1]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 7, 0, 1 ]));
JK := BaseChange(DB[2]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1/16*(5*w + 25), 1/16*(-3*w - 7), 1 ]),
                      Polynomial(K, [ 1/128*(97*w + 85), 1/128*(-27*w - 119) ]), 2>);
DB[2]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 15, 0, 1 ]));
JK := BaseChange(DB[3]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 73/3, -44/3, 1 ]), Polynomial(K, [ -2588/15*w, 1357/15*w ]), 2>);
DB[3]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 15, 0, 1 ]));
JK := BaseChange(DB[4]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1/277923*(32622*w - 635239), 1/555846*(387947*w + 444331), 1 ]),
                      Polynomial(K, [ 1/154482387858*(-668262788323*w + 486096986511),
                                      1/154482387858*(128908400369*w - 2388212241711) ]), 2>);
DB[4]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 11, 0, 1 ]));
JK := BaseChange(DB[5]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1/5589*(1922*w - 5380), 1/11178*(5435*w + 13127), 1 ]),
                      Polynomial(K, [ 1/31236921*(37797082*w + 27156457), 1/62473842*(7308913*w + 126148777) ]), 2>);
DB[5]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 11, 0, 1 ]));
JK := BaseChange(DB[6]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1/12*(-w + 41), 1/12*(w - 47), 1 ]),
                      Polynomial(K, [ 1/36*(43*w - 278), 1/72*(-65*w + 433) ]), 2>);
DB[6]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 19, 0, 1 ]));
JK := BaseChange(DB[7]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1/3030*(-149*w + 4829), 1/3030*(-169*w - 2291), 1 ]),
                      Polynomial(K, [ 1/2295225*(-106393*w + 943038), 1/4590450*(640799*w - 221709) ]), 2>);
DB[7]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 23, 0, 1 ]));
JK := BaseChange(DB[8]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1/1127065244*(4318477*w + 1671398815),
                                      1/3381195732*(157342477*w + 4134266443), 1 ]),
                      Polynomial(K, [ 1/1905414096349169304*(-115415948854222247*w + 513173969910148819),
                                      1/5716242289047507912*(282345002673186721*w - 1633707347951421845) ]), 2>);
DB[8]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 35, 0, 1 ]));
JK := BaseChange(DB[9]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1/390*(-107*w - 1502), 1/195*(8*w - 55), 1 ]),
                      Polynomial(K, [ 1/76050*(27331*w - 100370), 1/15210*(779*w - 23242) ]), 2>);
DB[9]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 51, 0, 1 ]));
JK := BaseChange(DB[10]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1/811315558914*(-42015848767*w + 227403727110),
                                      1/135219259819*(-13143959789*w + 132863469179), 1 ]),
                      Polynomial(K, [ 1/2151088026588026813266*(54732295474415073613*w + 1573385845159391356073),
                                      1/6453264079764080439798*(356054410603666746629*w - 23274624479728222733382) ]), 2>);
DB[10]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 7, 0, 1 ]));
JK := BaseChange(DB[11]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 2, 1 ]), 2>);
DB[11]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 7, 0, 1 ]));
JK := BaseChange(DB[12]`J, K);
Append(~hps, elt<JK | Polynomial(K, [
1/75901123658943533199529209854*(49985715640153566575090266933*w - 321857679085601326929863355653),
1/37950561829471766599764604927*(15963176243252353692544977713*w - 43928333010390142686824586999),
1
]), Polynomial(K, [
1/2880490286345118880535340071960793039799126974480785350658*(-761899553834463366024722211443932910101386571313391239851*w + 30268297660484016878307437304409104988062808312312400270161),
1/2880490286345118880535340071960793039799126974480785350658*(-477858675944335145730110679796005329503072345082857807611*w + 19631065526307347247565457583693715274406865051780637425267)
]), 2>);
DB[12]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 19, 0, 1 ]));
JK := BaseChange(DB[13]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ -122917/21431, 110038/21431, 1 ]),
                      Polynomial(K, [ 11389900727/8726467459*w, 1873191328/8726467459*w ]), 2>);
DB[13]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 19, 0, 1 ]));
JK := BaseChange(DB[14]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 1, 1 ]), 2>);
DB[14]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 19, 0, 1 ]));
JK := BaseChange(DB[15]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1/1531250*(-35437*w + 1659467), 1/765625*(-220898*w + 721143), 1 ]),
                      Polynomial(K, [ 1/1339843750*(-37527783*w + 605875553),
                                      1/669921875*(-233930982*w + 2150237312) ]), 2>);
DB[15]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 19, 0, 1 ]));
JK := BaseChange(DB[16]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1, 1 ]), Polynomial(K, [ 1, 0, 0, -1 ]), 2>);
DB[16]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 19, 0, 1 ]));
JK := BaseChange(DB[17]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 5/12, 5/3, 1 ]), Polynomial(K, [ 3/4*w, 5/4*w ]), 2>);
DB[17]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 23, 0, 1 ]));
JK := BaseChange(DB[18]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1/32*(-9*w + 11), 1/16*(3*w + 23), 1 ]),
                      Polynomial(K, [ 1/256*(73*w - 811), 1/128*(-151*w - 11) ]), 2>);
DB[18]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 23, 0, 1 ]));
JK := BaseChange(DB[19]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1/35775291032*(303858827*w + 36665677447),
                                      1/17887645516*(-381319303*w - 9436820735), 1 ]),
                      Polynomial(K, [ 1/319967862106074906256*(25102744672567581905*w + 1635464593975868157),
                                      1/239975896579556179692*(4181020665233371729*w + 108575316261294075673) ]), 2>);
DB[19]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 7, 0, 1 ]));
JK := BaseChange(DB[20]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1/2*(3*w + 3), 1/2*(w + 7), 1 ]), Polynomial(K, [ -9, 2*w - 3 ]), 2>);
DB[20]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 11, 0, 1 ]));
JK := BaseChange(DB[21]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -1, 0, 0, 1 ]), 2>);
DB[21]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 11, 0, 1 ]));
JK := BaseChange(DB[22]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ -10, -2, 1 ]), Polynomial(K, [ 21, 9 ]), 2>);
DB[22]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 11, 0, 1 ]));
JK := BaseChange(DB[23]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 0, -1 ]), 2>);
DB[23]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 7, 0, 1 ]));
JK := BaseChange(DB[24]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1, 1 ]), Polynomial(K, [ -2, 0, 0, -1 ]), 2>);
DB[24]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 11, 0, 1 ]));
JK := BaseChange(DB[25]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1/2, 1/2, 1 ]), Polynomial(K, [ 5/4, 3/4 ]), 2>);
DB[25]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 23, 0, 1 ]));
JK := BaseChange(DB[26]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1/116*(3*w + 53), 1/116*(7*w + 85), 1 ]),
                      Polynomial(K, [ 1/3364*(-165*w + 681), 1/3364*(79*w + 1937) ]), 2>);
DB[26]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 11, 0, 1 ]));
JK := BaseChange(DB[27]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 4, 1 ]), 2>);
DB[27]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 71, 0, 1 ]));
JK := BaseChange(DB[28]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 3783832205044277/1452683916956783, 6238430187782139/1452683916956783, 1 ]),
                      Polynomial(K, [
10294486963871248444852811636212/2110290562584901607319889709089*w,
14073431242654668873304865849406/2110290562584901607319889709089*w ]), 2>);
DB[28]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 31, 0, 1 ]));
JK := BaseChange(DB[29]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 0, 1, 1 ]), Polynomial(K, [ -1 ]), 2>);
DB[29]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 31, 0, 1 ]));
JK := BaseChange(DB[30]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1, -4, 1 ]), Polynomial(K, [ 2, -21 ]), 2>);
DB[30]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 31, 0, 1 ]));
JK := BaseChange(DB[31]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1/503192460482*(-6195145965*w - 1288987184917),
                                      1/503192460482*(-5307822025*w - 101732625197), 1 ]),
                      Polynomial(K, [
1/633006630714822829180810*(15984714016426244310689*w + 1000489129101414017489763),
1/316503315357411414590405*(577996810519471198386*w - 291951808705007889585943) ]), 2>);
DB[31]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 11, 0, 1 ]));
JK := BaseChange(DB[32]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1/6758*(1231*w - 21405), 1/3379*(264*w + 2951), 1 ]),
                      Polynomial(K, [ 1/22835282*(-2902775*w - 11055897),
                                      1/22835282*(-1612393*w - 1932017) ]), 2>);
DB[32]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 11, 0, 1 ]));
JK := BaseChange(DB[33]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1/269*(-15*w - 22), 1/538*(-131*w + 41), 1 ]),
                      Polynomial(K, [ 1/144722*(9917*w + 62947), 1/144722*(16467*w + 127609) ]), 2>);
DB[33]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 47, 0, 1 ]));
JK := BaseChange(DB[34]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 0, -1 ]), 2>);
DB[34]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 131, 0, 1 ]));
JK := BaseChange(DB[35]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 4/3, 4/3, 1 ]), Polynomial(K, [ 11/9, 14/9 ]), 2>);
DB[35]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 15, 0, 1 ]));
JK := BaseChange(DB[36]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, -2, -1 ]), 2>);
DB[36]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 7, 0, 1 ]));
JK := BaseChange(DB[37]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1/1058*(-133*w - 181), 1/529*(-344*w - 142), 1 ]),
                      Polynomial(K, [ 1/12167*(1474*w + 11699), 1/24334*(3401*w - 11695) ]), 2>);
DB[37]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 11, 0, 1 ]));
JK := BaseChange(DB[38]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1, 1, 1 ]), Polynomial(K, [ -2, -1 ]), 2>);
DB[38]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 15, 0, 1 ]));
JK := BaseChange(DB[39]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ -1, 0, 1 ]), Polynomial(K, [ 0, -1 ]), 2>);
DB[39]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 7, 0, 1 ]));
JK := BaseChange(DB[40]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 0, -1 ]), 2>);
DB[40]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 7, 0, 1 ]));
JK := BaseChange(DB[41]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 0, 1 ]), 2>);
DB[41]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 31, 0, 1 ]));
JK := BaseChange(DB[42]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ 1, 0, 0, -1 ]), 2>);
DB[42]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 11, 0, 1 ]));
JK := BaseChange(DB[43]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 0, 0, 1 ]), Polynomial(K, [ -3, -2 ]), 2>);
DB[43]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 51, 0, 1 ]));
JK := BaseChange(DB[44]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1, 1 ]), Polynomial(K, [ -3, 0, 0, -1 ]), 2>);
DB[44]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 7, 0, 1 ]));
JK := BaseChange(DB[45]`J, K);
Append(~hps, elt<JK | Polynomial(K, [
1/3672733572724588818*(-735862959768911015*w - 3732415601661271719),
1/3672733572724588818*(-11988602860753113*w - 2658863313922502041),
1
]), Polynomial(K, [
1/1124080991351526878337818728930886427*(594236891341538786572294741385298582*w - 272107456295707373743750319835701213),
1/2248161982703053756675637457861772854*(-182437034538988680521997804365709709*w + 789485464168265259832892756683255359)
]), 2>);
DB[45]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 11, 0, 1 ]));
JK := BaseChange(DB[46]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1, -2, 1 ]), Polynomial(K, [ -5, 6 ]), 2>);
DB[46]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 35, 0, 1 ]));
JK := BaseChange(DB[47]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ -1/6, -1/3, 1 ]), Polynomial(K, [ -7/18, 55/18 ]), 2>);
DB[47]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 11, 0, 1 ]));
JK := BaseChange(DB[48]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 15/2, 11/2, 1 ]), Polynomial(K, [ 37/4, 15/4 ]), 2>);
DB[48]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 15, 0, 1 ]));
JK := BaseChange(DB[49]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ -8, 1, 1 ]), Polynomial(K, [ 20/3*w, -8/3*w ]), 2>);
DB[49]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 31, 0, 1 ]));
JK := BaseChange(DB[50]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 5, -5, 1 ]), Polynomial(K, [ -23, 16 ]), 2>);
DB[50]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 31, 0, 1 ]));
JK := BaseChange(DB[51]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ -21570/39601, 47764/39601, 1 ]),
                      Polynomial(K, [ 469348/7880599*w, -1009859/7880599*w ]), 2>);
DB[51]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 23, 0, 1 ]));
JK := BaseChange(DB[52]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ -7/2, -11/2, 1 ]), Polynomial(K, [ 95/4, 165/4 ]), 2>);
DB[52]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 23, 0, 1 ]));
JK := BaseChange(DB[53]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ -27/17, -81/34, 1 ]), Polynomial(K, [ 1281/578, 4897/1156 ]), 2>);
DB[53]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 19, 0, 1 ]));
JK := BaseChange(DB[54]`J, K);
Append(~hps, elt<JK | Polynomial(K, [
1/368764032131956875754083476952125661684747228980038464564657818469652650*(45260892132357461152968994891391947003153077241870149799611996214001677*w - 168878839287564986690232131141356341910150477526758558044730737540400207),
1/73752806426391375150816695390425132336949445796007692912931563693930530*(6284714844436756403590112401376247946380841930498670796199745787288649*w + 79864249529555758625809431086076039300986014952286062705420579751579171),
1
]), Polynomial(K, [
1/6799345569710946156190517195483424186559327308883622821437349943288787074065430320861193789811080180039953346836263969898320267720450582601125*(-3451356856407893459516712180084948577462824447388199777566287176062061366586954997333862377533505350937406681623893184198325181929732850281996*w - 18575674041281434267570513975970664271355907487085367738930929040929829996473999974669629737503381575431367192362430729766279555190973822583264),
1/1359869113942189231238103439096684837311865461776724564287469988657757414813086064172238757962216036007990669367252793979664053544090116520225*(-499799573138220107410164451193344763720848231469381932924658867690342528354587073604719845222424936020734292033459521698173788487447324717406*w - 2589780561095579303724209127250473216255527443365339429788129073574105537865333549537716311800826427242471102522090987880911396437570776104429)
]), 2>);
DB[54]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 39, 0, 1 ]));
JK := BaseChange(DB[55]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, -2, -1 ]), 2>);
DB[55]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 31, 0, 1 ]));
JK := BaseChange(DB[56]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1, -1, 1 ]), Polynomial(K, [ 0, -1 ]), 2>);
DB[56]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 19, 0, 1 ]));
JK := BaseChange(DB[57]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ -1, -1/2, 1 ]), Polynomial(K, [ -3/2, 7/4 ]), 2>);
DB[57]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 43, 0, 1 ]));
JK := BaseChange(DB[58]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 67/18, 32/9, 1 ]), Polynomial(K, [ -1375/162, -589/162 ]), 2>);
DB[58]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 23, 0, 1 ]));
JK := BaseChange(DB[59]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1, -1, 1 ]), Polynomial(K, [ -1, -6 ]), 2>);
DB[59]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 11, 0, 1 ]));
JK := BaseChange(DB[60]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ -283/268, 233/268, 1 ]),
                      Polynomial(K, [ -1654273/790064*w, -1205609/790064*w ]), 2>);
DB[60]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 71, 0, 1 ]));
JK := BaseChange(DB[61]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ -1, 1, 1 ]), Polynomial(K, [ 2, 1 ]), 2>);
DB[61]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 15, 0, 1 ]));
JK := BaseChange(DB[62]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ -3/2, 1 ]), Polynomial(K, [ 29/4, 0, 0, -2 ]), 2>);
DB[62]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 47, 0, 1 ]));
JK := BaseChange(DB[63]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1, -1, 1 ]), Polynomial(K, [ -1 ]), 2>);
DB[63]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 7, 0, 1 ]));
JK := BaseChange(DB[64]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1/1533578*(114189*w - 3376143), 1/1533578*(-55405*w + 92575), 1 ]),
                      Polynomial(K, [ 1/1175930741042*(-31534790423*w - 1943546646771),
                                      1/587965370521*(-1475581870*w - 675612809694) ]), 2>);
DB[64]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 11, 0, 1 ]));
JK := BaseChange(DB[65]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ -2, 1 ]), Polynomial(K, [ 9, 0, 0, -1 ]), 2>);
DB[65]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 15, 0, 1 ]));
JK := BaseChange(DB[66]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 7, 3, 1 ]), Polynomial(K, [ -1, 5 ]), 2>);
DB[66]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 15, 0, 1 ]));
JK := BaseChange(DB[67]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1, -2, 1 ]), Polynomial(K, [ -1, 2 ]), 2>);
DB[67]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 11, 0, 1 ]));
JK := BaseChange(DB[68]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ -1/3, 1/3, 1 ]), Polynomial(K, [ -7/9, 1/9 ]), 2>);
DB[68]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 7, 0, 1 ]));
JK := BaseChange(DB[69]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1, 1, 1 ]), Polynomial(K, [ 5, 14 ]), 2>);
DB[69]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 7, 0, 1 ]));
JK := BaseChange(DB[70]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ -47/10, -9/5, 1 ]), Polynomial(K, [ -657/50, -473/50 ]), 2>);
DB[70]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 19, 0, 1 ]));
JK := BaseChange(DB[71]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ -1, 1 ]), Polynomial(K, [ 0, 0, 0, -1 ]), 2>);
DB[71]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 7, 0, 1 ]));
JK := BaseChange(DB[72]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ -1, 1, 1 ]), Polynomial(K, [ 1, -1 ]), 2>);
DB[72]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 7, 0, 1 ]));
JK := BaseChange(DB[73]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ 1, 0, 0, -1 ]), 2>);
DB[73]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 39, 0, 1 ]));
JK := BaseChange(DB[74]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ -26468/1166881, 274987/3500643, 1 ]),
                      Polynomial(K, [ 1342055994607/4084833804483, 83678757982828/12254501413449 ]), 2>);
DB[74]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 23, 0, 1 ]));
JK := BaseChange(DB[75]`J, K);
Append(~hps, elt<JK | Polynomial(K, [
326316104784926379563/2369857396353011178547,
619728400197631882565/2369857396353011178547,
1
]), Polynomial(K, [
-1296798482331659993684990600543863898519372/5616224079049073120825185859403141913031209*w,
-15278502785718767814216258503951490721057898/5616224079049073120825185859403141913031209*w
]), 2>);
DB[75]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 7, 0, 1 ]));
JK := BaseChange(DB[76]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1/2, 0, 1 ]), Polynomial(K, [ 0, 1/2 ]), 2>);
DB[76]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 11, 0, 1 ]));
JK := BaseChange(DB[77]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 11, -7, 1 ]), Polynomial(K, [ 56, -24 ]), 2>);
K<w> := NumberField(Polynomial([ 83, 0, 1 ]));
JK := BaseChange(DB[77]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ -16990457344/352067831, 5178851048/352067831, 1 ]),
                      Polynomial(K, [ 86532834502751900771/123951757625044561,
                                      -31295970009402871364/123951757625044561 ]), 2>);
DB[77]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 11, 0, 1 ]));
JK := BaseChange(DB[78]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 3/4, 3/2, 1 ]), Polynomial(K, [ -15/8, -7/2 ]), 2>);
DB[78]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 55, 0, 1 ]));
JK := BaseChange(DB[79]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 2379/3290, 3441/3290, 1 ]),
                      Polynomial(K, [ -20740199/10824100, -2519711/10824100 ]), 2>);
DB[79]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 31, 0, 1 ]));
JK := BaseChange(DB[80]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ -4189018314966901579/4273352740369419733,
                                      9393936437344906523/4273352740369419733, 1 ]),
                      Polynomial(K, [
1465161884101069878326776109331484020/18261543643622829256587707779129791289*w,
533873373710638367807671251580161534/18261543643622829256587707779129791289*w ]), 2>);
DB[80]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 31, 0, 1 ]));
JK := BaseChange(DB[81]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ -19141/14907, -27037/14907, 1 ]),
                      Polynomial(K, [ -14072600/222218649*w, 11438482/222218649*w ]), 2>);
DB[81]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 15, 0, 1 ]));
JK := BaseChange(DB[82]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 63/76, 87/76, 1 ]), Polynomial(K, [ 14335/5776, 23947/5776 ]), 2>);
DB[82]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 15, 0, 1 ]));
JK := BaseChange(DB[83]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1, 1, 1 ]), Polynomial(K, [ 4, 1 ]), 2>);
DB[83]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 7, 0, 1 ]));
JK := BaseChange(DB[84]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 368976485714/279389416329, 3033640090595/22630542722649, 1 ]),
                      Polynomial(K, [ -89705321139528676/1329099317615416653*w,
                                      -107447416007895133168/107657044726848748893*w ]), 2>);
DB[84]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 43, 0, 1 ]));
JK := BaseChange(DB[85]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 0, -1, 1 ]), Polynomial(K, [ 2 ]), 2>);
DB[85]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 15, 0, 1 ]));
JK := BaseChange(DB[86]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1851/1445, 3678/1445, 1 ]),
                      Polynomial(K, [ 47996/122825*w, 290519/368475*w ]), 2>);
DB[86]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 15, 0, 1 ]));
JK := BaseChange(DB[87]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ -7/5, 8/5, 1 ]), Polynomial(K, [ 26/75*w, -29/75*w ]), 2>);
DB[87]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 15, 0, 1 ]));
JK := BaseChange(DB[88]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 13/9, 20/9, 1 ]), Polynomial(K, [ -83/27, -46/27 ]), 2>);
DB[88]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 23, 0, 1 ]));
JK := BaseChange(DB[89]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 3, 0, 1 ]), Polynomial(K, [ -3, 4 ]), 2>);
DB[89]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 15, 0, 1 ]));
JK := BaseChange(DB[90]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ -2, 1 ]), Polynomial(K, [ 7, 0, 0, -1 ]), 2>);
DB[90]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 7, 0, 1 ]));
JK := BaseChange(DB[91]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 37/5, 11/5, 1 ]), Polynomial(K, [ 303/25, 19/25 ]), 2>);
DB[91]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 11, 0, 1 ]));
JK := BaseChange(DB[92]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ -3/2, -3/2, 1 ]), Polynomial(K, [ -135/44*w, 59/44*w ]), 2>);
DB[92]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 7, 0, 1 ]));
JK := BaseChange(DB[93]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1595/672, 263/112, 1 ]),
                      Polynomial(K, [ -59135/25088, -277579/37632 ]), 2>);
DB[93]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 51, 0, 1 ]));
JK := BaseChange(DB[94]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 1, 1 ]), Polynomial(K, [ 0, 0, 0, -1 ]), 2>);
DB[94]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 7, 0, 1 ]));
JK := BaseChange(DB[95]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 7873008/2961841, 12456385/2961841, 1 ]),
                      Polynomial(K, [ 55418300402/5097328361, 80574635716/5097328361 ]), 2>);
DB[95]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 23, 0, 1 ]));
JK := BaseChange(DB[96]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ 165/61, -123/61, 1 ]), Polynomial(K, [ 231418/3721, -37299/3721 ]), 2>);
DB[96]`H_points := hps;

hps := [* *];
K<w> := NumberField(Polynomial([ 11, 0, 1 ]));
JK := BaseChange(DB[97]`J, K);
Append(~hps, elt<JK | Polynomial(K, [ -14, 3, 1 ]), Polynomial(K, [ -63, 16 ]), 2>);
DB[97]`H_points := hps;

// Extract Heegner fields from Heegner points.
for j := 1 to number do
  DB[j]`H_fields := [BaseField(Parent(y)) : y in DB[j]`H_points];
end for;

// Add information on generators of J(K) and how the Heegner point
// is written in terms of these. (Generated by a program.)
printf "filling in MW info...\n";
JKgens := [* *]; Hps := [* *];
JK := Parent(DB[1]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 0, 0, 1 ]), Polynomial(K, [ 1, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 1, 1, 1 ]), Polynomial(K, [ 0, -w ]), 2>,
  elt<JK | Polynomial(K, [ 1/2, 0, 1 ]), Polynomial(K, [ 0, -1/2*w ]), 2>]);
Append(~Hps, [ 9, -1, 0 ]);
DB[1]`JK_gens := JKgens; DB[1]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[2]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1, 0, 1 ]), Polynomial(K, [ 1 ]), 2>,
  elt<JK | Polynomial(K, [ 3/2, 1/2, 1 ]), Polynomial(K, [ 1/4*w, 1/4*w ]), 2>,
  elt<JK | Polynomial(K, [ 3, 2, 1 ]), Polynomial(K, [ w ]), 2>]);
Append(~Hps, [ 5, -1, -1 ]);
DB[2]`JK_gens := JKgens; DB[2]`H_points_MW := Hps;

// For this curve, saturation was not successful.
JKgens := [* *]; Hps := [* *];
Append(~JKgens, []);
DB[3]`JK_gens := JKgens; DB[3]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[4]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 9/7, -8/7, 1 ]), Polynomial(K, [ 3/49, 2/49 ]), 2>,
  elt<JK | Polynomial(K, [ -1, 2/3, 1 ]), Polynomial(K, [ -41/15*w, 106/45*w ]), 2>,
  elt<JK | Polynomial(K, [ 79/61, -71/61, 1 ]), Polynomial(K, [ -1088/55815*w, 191/55815*w ]), 2>]);
Append(~Hps, [ 1, -1, -1 ]);
DB[4]`JK_gens := JKgens; DB[4]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[5]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 2, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 4/3, 5/3, 1 ]), Polynomial(K, [ 1/9*w, 2/9*w ]), 2>,
  elt<JK | Polynomial(K, [ 1, 2/3, 1 ]), Polynomial(K, [ -1/3*w, -2/9*w ]), 2>]);
Append(~Hps, [ 4, -1, -2 ]);
DB[5]`JK_gens := JKgens; DB[5]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[6]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 3, -3, 1 ]), Polynomial(K, [ -7, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 1/3, -5/3, 1 ]), Polynomial(K, [ -11/9*w, 7/9*w ]), 2>,
  elt<JK | Polynomial(K, [ 0, -4/5, 1 ]), Polynomial(K, [ w, -8/25*w ]), 2>]);
Append(~Hps, [ 3, 2, -1 ]);
DB[6]`JK_gens := JKgens; DB[6]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[7]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1, 1 ]), Polynomial(K, [ 1, 0, 0, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 1/154*(9*w - 265), 1/154*(-87*w - 5), 1 ]),
           Polynomial(K, [ 1/5929*(5847*w + 4502), 1/11858*(-2085*w - 60217) ]), 2>,
  elt<JK | Polynomial(K, [ 14/9, 1/3, 1 ]), Polynomial(K, [ 4/9*w, 4/9*w ]), 2>]);
Append(~Hps, [ 3, -1, 0 ]);
DB[7]`JK_gens := JKgens; DB[7]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[8]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 2, 1, 1 ]), Polynomial(K, [ 1, -1 ]), 2>,
  elt<JK | Polynomial(K, [ 1/2*(-w - 1), 1/6*(-w - 7), 1 ]), Polynomial(K, [ 1/6*(5*w - 1), 1/18*(11*w + 77) ]), 2>,
  elt<JK | Polynomial(K, [ 1/4*(-w + 7), 1/4*(-w + 1), 1 ]), Polynomial(K, [ 1/2*(-w - 2), 1/8*(-w - 23) ]), 2>]);
Append(~Hps, [ 7, -2, 1 ]);
DB[8]`JK_gens := JKgens; DB[8]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[9]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -9/2, -1/2, 1 ]), Polynomial(K, [ -9/4, 1/4 ]), 2>,
  elt<JK | Polynomial(K, [ -570025/451271, -891970/451271, 1 ]),
           Polynomial(K, [ 187510725333/407291030882*w, -340036873671/2036455154410*w ]), 2>,
  elt<JK | Polynomial(K, [ -7/5, -2, 1 ]), Polynomial(K, [ -11/25*w, 1/5*w ]), 2>]);
Append(~Hps, [ 2, 0, 1 ]);
DB[9]`JK_gens := JKgens; DB[9]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[10]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1/2, 1, 1 ]), Polynomial(K, [ 1/2, -7/2 ]), 2>,
  elt<JK | Polynomial(K, [ 21/4, 3/2, 1 ]), Polynomial(K, [ 1/8*w, 1/6*w ]), 2>,
  elt<JK | Polynomial(K, [ 7/11, 7/11, 1 ]), Polynomial(K, [ 58/121*w, 36/121*w ]), 2>]);
Append(~Hps, [ 4, -1, -2 ]);
DB[10]`JK_gens := JKgens; DB[10]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[11]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -1, 0, 0, -1 ]), 2>,
  elt<JK | Polynomial(K, [ 0, 0, 1 ]), Polynomial(K, [ 1, -1 ]), 2>]);
Append(~Hps, [ -2, -1 ]);
DB[11]`JK_gens := JKgens; DB[11]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[12]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -4, -1, 1 ]), Polynomial(K, [ 3, 2 ]), 2>,
  elt<JK | Polynomial(K, [ 4, 4, 1 ]), Polynomial(K, [ -61/7*w, -34/7*w ]), 2>,
  elt<JK | Polynomial(K, [ -5, -1, 1 ]), Polynomial(K, [ 3/7*w, 1/7*w ]), 2>]);
Append(~Hps, [ 1, -2, -3 ]);
DB[12]`JK_gens := JKgens; DB[12]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[13]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -1/2, 6, 1 ]), Polynomial(K, [ 20/19*w, 7/38*w ]), 2>,
  elt<JK | Polynomial(K, [ 45/4, 113/12, 1 ]), Polynomial(K, [ 6043/304*w, 8459/912*w ]), 2>]);
Append(~Hps, [ -1, -1 ]);
DB[13]`JK_gens := JKgens; DB[13]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[14]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -1, 0, 0, -1 ]), 2>,
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ 1, 0, 0, -1 ]), 2>]);
Append(~Hps, [ -1, -1 ]);
DB[14]`JK_gens := JKgens; DB[14]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[15]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 2, 1, 1 ]), Polynomial(K, []), 2>,
  elt<JK | Polynomial(K, [ -1, 1 ]), Polynomial(K, []), 1>,
  elt<JK | Polynomial(K, [ 1/2*(-w + 1), 1, 1 ]), Polynomial(K, [ 1/2*(-w + 9), -2 ]), 2>,
  elt<JK | Polynomial(K, [ 1/98*(-w + 31), 1/98*(3*w + 103), 1 ]),
           Polynomial(K, [ 1/686*(-309*w - 417), 1/686*(-445*w - 807) ]), 2>]);
Append(~Hps, [ 0, 0, 3, 2 ]);
DB[15]`JK_gens := JKgens; DB[15]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[16]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -1, -1, 1 ]), Polynomial(K, []), 2>,
  elt<JK | Polynomial(K, [ -2, -1, 1 ]), Polynomial(K, [ 3, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 0, 1/2, 1 ]), Polynomial(K, [ -1, -3/4 ]), 2>]);
Append(~Hps, [ 0, -1, -1 ]);
DB[16]`JK_gens := JKgens; DB[16]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[17]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1, 11/3, 1 ]), Polynomial(K, []), 2>,
  elt<JK | Polynomial(K, [ 12/7, 26/7, 1 ]), Polynomial(K, [ -93/49*w, -37/49*w ]), 2>,
  elt<JK | Polynomial(K, [ 5/2, 4, 1 ]), Polynomial(K, [ 2*w, 1/2*w ]), 2>]);
Append(~Hps, [ 0, 1, -1 ]);
DB[17]`JK_gens := JKgens; DB[17]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[18]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 0, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 5/3, -7/3, 1 ]), Polynomial(K, [ 4/9*w, 1/9*w ]), 2>,
  elt<JK | Polynomial(K, [ 5/2, -3, 1 ]), Polynomial(K, [ -3/2*w, 1/2*w ]), 2>]);
Append(~Hps, [ 1, 1, -1 ]);
DB[18]`JK_gens := JKgens; DB[18]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[19]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1, -1, 1 ]), Polynomial(K, [ -2, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 1, 2, 1 ]), Polynomial(K, [ -17/23*w, -86/23*w ]), 2>,
  elt<JK | Polynomial(K, [ 67/13, -127/13, 1 ]), Polynomial(K, [ -2726/169*w, 4621/169*w ]), 2>]);
Append(~Hps, [ 3, 1, 1 ]);
DB[19]`JK_gens := JKgens; DB[19]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[20]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 2, 1, 1 ]), Polynomial(K, [ 1, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 1/2*(-w + 1), 1 ]), Polynomial(K, [ 1/2*(-w - 1) ]), 1>,
  elt<JK | Polynomial(K, [ 3, 1 ]), Polynomial(K, [ -6*w ]), 1>]);
Append(~Hps, [ 3, -1, 1 ]);
DB[20]`JK_gens := JKgens; DB[20]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[21]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -1, 0, 1 ]), Polynomial(K, [ -3 ]), 2>,
  elt<JK | Polynomial(K, [ 0, 1, 1 ]), Polynomial(K, [ -1, 2 ]), 2>]);
Append(~Hps, [ 0, -2 ]);
DB[21]`JK_gens := JKgens; DB[21]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[22]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 3, 1 ]), Polynomial(K, [ 18, 0, 0, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 7/3, 1 ]), Polynomial(K, [ -38/3, 0, 0, -1 ]), 2>]);
Append(~Hps, [ 0, -2 ]);
DB[22]`JK_gens := JKgens; DB[22]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[23]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 0, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -1, 0, 0, -1 ]), 2>]);
Append(~Hps, [ -1, 0 ]);
DB[23]`JK_gens := JKgens; DB[23]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[24]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 1, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 1, 1 ]), Polynomial(K, [ 0, 0, 0, 1 ]), 2>]);
Append(~Hps, [ -1, 1 ]);
DB[24]`JK_gens := JKgens; DB[24]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[25]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -2, 1, 1 ]), Polynomial(K, [ -5 ]), 2>,
  elt<JK | Polynomial(K, [ 1, 0, 1 ]), Polynomial(K, [ -1, 2 ]), 2>]);
Append(~Hps, [ 4, -2 ]);
DB[25]`JK_gens := JKgens; DB[25]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[26]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1/3, 2/3, 1 ]), Polynomial(K, [ -1/9, 4/9 ]), 2>,
  elt<JK | Polynomial(K, [ 13/37, 19/37, 1 ]), Polynomial(K, [ 97/1369*w, 230/1369*w ]), 2>,
  elt<JK | Polynomial(K, [ 1, -2, 1 ]), Polynomial(K, [ -55/23*w, 124/23*w ]), 2>]);
Append(~Hps, [ 5, 1, 0 ]);
DB[26]`JK_gens := JKgens; DB[26]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[27]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -1, 0, 0, -1 ]), 2>,
  elt<JK | Polynomial(K, [ 0, 0, 1 ]), Polynomial(K, [ -1, -1 ]), 2>]);
Append(~Hps, [ -2, 1 ]);
DB[27]`JK_gens := JKgens; DB[27]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[28]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1083/4481, 4713/4481, 1 ]),
           Polynomial(K, [ 4881096/20079361*w, 6635954/20079361*w ]), 2>,
  elt<JK | Polynomial(K, [ 53093/93311, 142035/93311, 1 ]),
           Polynomial(K, [ 3582207844/8706942721*w, 5009314014/8706942721*w ]), 2>]);
Append(~Hps, [ -2, -1 ]);
DB[28]`JK_gens := JKgens; DB[28]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[29]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 0, 0, 1 ]), Polynomial(K, [ 1, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -1, 0, 0, -1 ]), 2>]);
Append(~Hps, [ 1, -1 ]);
DB[29]`JK_gens := JKgens; DB[29]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[30]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -5/2, 2, 1 ]), Polynomial(K, [ -13/2, 15/2 ]), 2>,
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 1, 1 ]), 2>,
  elt<JK | Polynomial(K, [ -5/2, 1 ]), Polynomial(K, [ -23/2, 0, 0, -1 ]), 2>]);
Append(~Hps, [ 5, 1, -1 ]);
DB[30]`JK_gens := JKgens; DB[30]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[31]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -1, -1, 1 ]), Polynomial(K, [ -8, 5 ]), 2>,
  elt<JK | Polynomial(K, [ -29/7, 5/7, 1 ]), Polynomial(K, [ -834/1519*w, 523/1519*w ]), 2>,
  elt<JK | Polynomial(K, [ 4, 4, 1 ]), Polynomial(K, [ -19/31*w, -25/31*w ]), 2>]);
Append(~Hps, [ 3, 1, -1 ]);
DB[31]`JK_gens := JKgens; DB[31]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[32]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -5, 0, 1 ]), Polynomial(K, [ 5, 2 ]), 2>,
  elt<JK | Polynomial(K, [ 2/7, -5/4, 1 ]), Polynomial(K, [ -17/14*w, 41/112*w ]), 2>,
  elt<JK | Polynomial(K, [ 83/43, -245/86, 1 ]), Polynomial(K, [ -7883/3698*w, 9879/7396*w ]), 2>]);
Append(~Hps, [ 1, -1, 0 ]);
DB[32]`JK_gens := JKgens; DB[32]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[33]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 0, 0, 1 ]), Polynomial(K, [ 1, 3 ]), 2>,
  elt<JK | Polynomial(K, [ 5/2, -3/2, 1 ]), Polynomial(K, [ 3/4*w, 5/4*w ]), 2>,
  elt<JK | Polynomial(K, [ 1/4, -1/4, 1 ]), Polynomial(K, [ -7/16*w, 11/16*w ]), 2>]);
Append(~Hps, [ 1, 0, -1 ]);
DB[33]`JK_gens := JKgens; DB[33]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[34]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1, -1, 1 ]), Polynomial(K, []), 2>,
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -3, 0, 0, -1 ]), 2>,
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 0, 1 ]), 2>]);
Append(~Hps, [ 0, 0, -1 ]);
DB[34]`JK_gens := JKgens; DB[34]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[35]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1, 1, 1 ]), Polynomial(K, []), 2>,
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -3, 0, 0, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 3/2, 1, 1 ]), Polynomial(K, [ 3/2, 1/2 ]), 2>]);
Append(~Hps, [ 0, 2, 0 ]);
DB[35]`JK_gens := JKgens; DB[35]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[36]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1, 1, 1 ]), Polynomial(K, [ 0, -1 ]), 2>,
  elt<JK | Polynomial(K, [ 1, 0, 1 ]), Polynomial(K, [ -1 ]), 2>]);
Append(~Hps, [ 1, 1 ]);
DB[36]`JK_gens := JKgens; DB[36]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[37]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 3, -1, 1 ]), Polynomial(K, []), 2>,
  elt<JK | Polynomial(K, [ 2, 2, 1 ]), Polynomial(K, [ w, 2*w ]), 2>,
  elt<JK | Polynomial(K, [ -w + 4, 1/2*(w + 1), 1 ]), Polynomial(K, [ 1/4*(7*w + 13), 1/4*(w - 13) ]), 2>]);
Append(~Hps, [ 0, -1, 1 ]);
DB[37]`JK_gens := JKgens; DB[37]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[38]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -1, 0, 0, -1 ]), 2>,
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 0, 1 ]), 2>]);
Append(~Hps, [ -1, 1 ]);
DB[38]`JK_gens := JKgens; DB[38]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[39]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -1 ]), 1>,
  elt<JK | Polynomial(K, [ 0, -1, 1 ]), Polynomial(K, [ 1 ]), 2>]);
Append(~Hps, [ 0, -3 ]);
DB[39]`JK_gens := JKgens; DB[39]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[40]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -1, 0, 0, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ 1, 0, 0, 1 ]), 2>]);
Append(~Hps, [ -1, -1 ]);
DB[40]`JK_gens := JKgens; DB[40]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[41]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -1, 0, 0, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 0, 0, 1 ]), Polynomial(K, [ 1, 3 ]), 2>]);
Append(~Hps, [ 2, 1 ]);
DB[41]`JK_gens := JKgens; DB[41]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[42]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -1, 0, 0, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ 1, 0, 0, 1 ]), 2>]);
Append(~Hps, [ -1, 0 ]);
DB[42]`JK_gens := JKgens; DB[42]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[43]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1, 1, 1 ]), Polynomial(K, []), 2>,
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -3, 0, 0, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 0, 1 ]), 2>]);
Append(~Hps, [ 0, 2, -1 ]);
DB[43]`JK_gens := JKgens; DB[43]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[44]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1, -1, 1 ]), Polynomial(K, [ 3, 2 ]), 2>,
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 1, 1 ]), 2>]);
Append(~Hps, [ -2, -1 ]);
DB[44]`JK_gens := JKgens; DB[44]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[45]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -2, 0, 1 ]), Polynomial(K, [ -3, 2 ]), 2>,
  elt<JK | Polynomial(K, [ 4, -4, 1 ]), Polynomial(K, [ -57/7*w, 32/7*w ]), 2>,
  elt<JK | Polynomial(K, [ -5, 1, 1 ]), Polynomial(K, [ -19/7*w, 11/7*w ]), 2>]);
Append(~Hps, [ 3, -2, 1 ]);
DB[45]`JK_gens := JKgens; DB[45]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[46]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 0, 1 ]), 2>,
  elt<JK | Polynomial(K, [ -1, 1 ]), Polynomial(K, [ 0, 0, 0, -1 ]), 2>]);
Append(~Hps, [ -1, -2 ]);
DB[46]`JK_gens := JKgens; DB[46]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[47]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -1, 0, 0, -1 ]), 2>,
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -1, 0, 0, 1 ]), 2>]);
Append(~Hps, [ -3, -2 ]);
DB[47]`JK_gens := JKgens; DB[47]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[48]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 5/2, 1 ]), Polynomial(K, [ 31/2, 0, 0, 1 ]), 2>,
  elt<JK | Polynomial(K, [ -6, 0, 1 ]), Polynomial(K, [ 5, 2 ]), 2>]);
Append(~Hps, [ 1, 2 ]);
DB[48]`JK_gens := JKgens; DB[48]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[49]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -4/3, 1 ]), Polynomial(K, [ -4/27*w ]), 1>,
  elt<JK | Polynomial(K, [ 1/4, -7/4, 1 ]), Polynomial(K, [ 7/6*w, -5/6*w ]), 2>]);
Append(~Hps, [ -1, -1 ]);
DB[49]`JK_gens := JKgens; DB[49]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[50]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 0, -2, 1 ]), Polynomial(K, [ 7, -4 ]), 2>,
  elt<JK | Polynomial(K, [ 7/3, -3, 1 ]), Polynomial(K, [ 7/3, -4/3 ]), 2>]);
Append(~Hps, [ -3, -1 ]);
DB[50]`JK_gens := JKgens; DB[50]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[51]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -5/9, 11/9, 1 ]), Polynomial(K, [ 1/27*w, -4/27*w ]), 2>,
  elt<JK | Polynomial(K, [ 3/2, 1 ]), Polynomial(K, [ -1/4*w ]), 1>]);
Append(~Hps, [ -1, 2 ]);
DB[51]`JK_gens := JKgens; DB[51]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[52]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -1, -1, 1 ]), Polynomial(K, [ 6, 9 ]), 2>,
  elt<JK | Polynomial(K, [ -1/3, 0, 1 ]), Polynomial(K, [ 5, 26/3 ]), 2>]);
Append(~Hps, [ 2, 0 ]);
DB[52]`JK_gens := JKgens; DB[52]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[53]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -3, 0, 0, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 0, 1/2, 1 ]), Polynomial(K, [ 3, 21/4 ]), 2>]);
Append(~Hps, [ 2, -4 ]);
DB[53]`JK_gens := JKgens; DB[53]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[54]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -1, 1, 1 ]), Polynomial(K, [ 0, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 97/33, 36/11, 1 ]), Polynomial(K, [ 8975/6897*w, 1462/6897*w ]), 2>,
  elt<JK | Polynomial(K, [ 2973/286, -15/26, 1 ]), Polynomial(K, [ -2032717/141284*w, 700295/141284*w ]), 2>]);
Append(~Hps, [ 2, 1, -2 ]);
DB[54]`JK_gens := JKgens; DB[54]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[55]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -1, 1 ]), Polynomial(K, [ -2, 0, 0, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 2, 1 ]), 2>]);
Append(~Hps, [ 0, -1 ]);
DB[55]`JK_gens := JKgens; DB[55]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[56]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1, -1, 1 ]), Polynomial(K, [ 0, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, -2, 1 ]), 2>]);
Append(~Hps, [ -1, 0 ]);
DB[56]`JK_gens := JKgens; DB[56]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[57]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -2, 0, 1 ]), Polynomial(K, [ 3, -2 ]), 2>,
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 1, 1 ]), 2>]);
Append(~Hps, [ 2, -1 ]);
DB[57]`JK_gens := JKgens; DB[57]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[58]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -1, 1, 1 ]), Polynomial(K, [ -1, -1 ]), 2>,
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 1, 1 ]), 2>]);
Append(~Hps, [ 3, -2 ]);
DB[58]`JK_gens := JKgens; DB[58]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[59]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -3, 1, 1 ]), Polynomial(K, [ -3, 2 ]), 2>,
  elt<JK | Polynomial(K, [ -3/2, 1 ]), Polynomial(K, [ -3, 0, 0, 1 ]), 2>]);
Append(~Hps, [ -1, 3 ]);
DB[59]`JK_gens := JKgens; DB[59]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[60]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -17/4, -3/2, 1 ]), Polynomial(K, [ 75/88*w, 4/11*w ]), 2>,
  elt<JK | Polynomial(K, [ -53/11, -1, 1 ]), Polynomial(K, [ 25/121*w, 1/11*w ]), 2>]);
Append(~Hps, [ -1, -1 ]);
DB[60]`JK_gens := JKgens; DB[60]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[61]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -1, 1, 1 ]), Polynomial(K, [ 2, 1 ]), 2>,
  elt<JK | Polynomial(K, [ -2, 0, 1 ]), Polynomial(K, [ 1, 1 ]), 2>]);
Append(~Hps, [ 1, 0 ]);
DB[61]`JK_gens := JKgens; DB[61]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[62]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -1, -1, 1 ]), Polynomial(K, [ 3, -2 ]), 2>,
  elt<JK | Polynomial(K, [ -3, 0, 1 ]), Polynomial(K, [ -1, 1 ]), 2>]);
Append(~Hps, [ 2, -1 ]);
DB[62]`JK_gens := JKgens; DB[62]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[63]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1, 1, 1 ]), Polynomial(K, [ -1, 4 ]), 2>,
  elt<JK | Polynomial(K, [ -2, 1 ]), Polynomial(K, [ -6, 0, 0, -1 ]), 2>]);
Append(~Hps, [ 1, 1 ]);
DB[63]`JK_gens := JKgens; DB[63]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[64]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -2, 0, 1 ]), Polynomial(K, [ 2, 1 ]), 2>,
  elt<JK | Polynomial(K, [ -5, -1, 1 ]), Polynomial(K, [ 39/7*w, 20/7*w ]), 2>,
  elt<JK | Polynomial(K, [ -6, -2, 1 ]), Polynomial(K, [ 74/7*w, 45/7*w ]), 2>]);
Append(~Hps, [ 4, -1, 1 ]);
DB[64]`JK_gens := JKgens; DB[64]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[65]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 0, 1 ]), 2>,
  elt<JK | Polynomial(K, [ -2, 1 ]), Polynomial(K, [ 7, 0, 0, -1 ]), 2>]);
Append(~Hps, [ -1, -1 ]);
DB[65]`JK_gens := JKgens; DB[65]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[66]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -1 ]), 1>,
  elt<JK | Polynomial(K, [ 0, 1, 1 ]), Polynomial(K, [ 1, 2 ]), 2>]);
Append(~Hps, [ -4, -2 ]);
DB[66]`JK_gens := JKgens; DB[66]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[67]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -1 ]), 1>,
  elt<JK | Polynomial(K, [ -1, 1 ]), Polynomial(K, [ -1 ]), 1>]);
Append(~Hps, [ 0, -2 ]);
DB[67]`JK_gens := JKgens; DB[67]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[68]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -1, 0, 0, -1 ]), 2>,
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -1, 0, 0, 1 ]), 2>]);
Append(~Hps, [ 1, -2 ]);
DB[68]`JK_gens := JKgens; DB[68]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[69]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -3/2, 1 ]), Polynomial(K, [ 7/2, 0, 0, -1 ]), 2>,
  elt<JK | Polynomial(K, [ -7, 3, 1 ]), Polynomial(K, [ 3, -2 ]), 2>]);
Append(~Hps, [ 3, -1 ]);
DB[69]`JK_gens := JKgens; DB[69]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[70]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -1, 1, 1 ]), Polynomial(K, [ 2, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 2, 1 ]), 2>]);
Append(~Hps, [ -1, -2 ]);
DB[70]`JK_gens := JKgens; DB[70]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[71]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 1, 1 ]), 2>,
  elt<JK | Polynomial(K, [ -1, 1 ]), Polynomial(K, [ 0, 0, 0, -1 ]), 2>]);
Append(~Hps, [ 0, 1 ]);
DB[71]`JK_gens := JKgens; DB[71]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[72]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -1, 1, 1 ]), Polynomial(K, [ -1, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 1, 1 ]), 2>]);
Append(~Hps, [ -1, 0 ]);
DB[72]`JK_gens := JKgens; DB[72]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[73]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -1, 0, 0, -1 ]), 2>,
  elt<JK | Polynomial(K, [ 0, 0, 1 ]), Polynomial(K, [ -1, -1 ]), 2>]);
Append(~Hps, [ 1, -1 ]);
DB[73]`JK_gens := JKgens; DB[73]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[74]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 4, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -1, 0, 0, 1 ]), 2>]);
Append(~Hps, [ -8, -5 ]);
DB[74]`JK_gens := JKgens; DB[74]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[75]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 10859/7643, 2997/7643, 1 ]),
           Polynomial(K, [ -15073260/58415449*w, 44566/58415449*w ]), 2>,
  elt<JK | Polynomial(K, [ 2389/2929, -1381/2929, 1 ]),
           Polynomial(K, [ -8235648/8579041*w, 5354158/8579041*w ]), 2>]);
Append(~Hps, [ -1, 2 ]);
DB[75]`JK_gens := JKgens; DB[75]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[76]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, -2, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 1, -1, 1 ]), Polynomial(K, [ 0, 1 ]), 2>]);
Append(~Hps, [ -1, 1 ]);
DB[76]`JK_gens := JKgens; DB[76]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[77]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -8/3, 1 ]), Polynomial(K, [ 19, 0, 0, -1 ]), 2>,
  elt<JK | Polynomial(K, [ -2, -2, 1 ]), Polynomial(K, [ -5, 2 ]), 2>]);
Append(~Hps, [ 1, -2 ]);
JK := Parent(DB[77]`H_points[2]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -8/3, 1 ]), Polynomial(K, [ 19, 0, 0, -1 ]), 2>,
  elt<JK | Polynomial(K, [ -2, -2, 1 ]), Polynomial(K, [ -5, 2 ]), 2>]);
Append(~Hps, [ 6, -4 ]);
DB[77]`JK_gens := JKgens; DB[77]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[78]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 0, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 1, 1, 1 ]), Polynomial(K, [ 2, 1 ]), 2>]);
Append(~Hps, [ -2, -1 ]);
DB[78]`JK_gens := JKgens; DB[78]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[79]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -1, 0, 0, -1 ]), 2>,
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -1, 0, 0, 1 ]), 2>]);
Append(~Hps, [ 2, -3 ]);
DB[79]`JK_gens := JKgens; DB[79]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[80]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -1, 2, 1 ]), Polynomial(K, []), 2>,
  elt<JK | Polynomial(K, [ -3/2, 2, 1 ]), Polynomial(K, []), 2>,
  elt<JK | Polynomial(K, [ 179/386, -312/193, 1 ]), Polynomial(K, [ -33552/37249*w, 79833/37249*w ]), 2>,
  elt<JK | Polynomial(K, [ 3109/4099, 14538/4099, 1 ]),
           Polynomial(K, [ -3129684/16801801*w, 4798566/16801801*w ]), 2>]);
Append(~Hps, [ 0, 1, 2, -1 ]);
DB[80]`JK_gens := JKgens; DB[80]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[81]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -3/2, -2, 1 ]), Polynomial(K, []), 2>,
  elt<JK | Polynomial(K, [ 1, -3, 1 ]), Polynomial(K, []), 2>,
  elt<JK | Polynomial(K, [ -3/13, 2/13, 1 ]), Polynomial(K, [ 33/338*w, 17/338*w ]), 2>,
  elt<JK | Polynomial(K, [ -30241/27969, -61382/27969, 1 ]),
           Polynomial(K, [ -5375306/782264961*w, -406036/782264961*w ]), 2>]);
Append(~Hps, [ 1, 0, -1, -1 ]);
DB[81]`JK_gens := JKgens; DB[81]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[82]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -1, 0, 0, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ 1, 0, 0, 1 ]), 2>]);
Append(~Hps, [ -2, -3 ]);
DB[82]`JK_gens := JKgens; DB[82]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[83]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, -2, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 1, 1 ]), Polynomial(K, [ 0, 0, 0, 1 ]), 2>]);
Append(~Hps, [ -1, -1 ]);
DB[83]`JK_gens := JKgens; DB[83]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[84]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -2, 1 ]), Polynomial(K, [ -4*w ]), 1>,
  elt<JK | Polynomial(K, [ 2, -5, 1 ]), Polynomial(K, [ -4*w, 8*w ]), 2>]);
Append(~Hps, [ 2, 3 ]);
DB[84]`JK_gens := JKgens; DB[84]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[85]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -2 ]), 1>,
  elt<JK | Polynomial(K, [ -1, 1 ]), Polynomial(K, [ -2 ]), 1>]);
Append(~Hps, [ -1, -1 ]);
DB[85]`JK_gens := JKgens; DB[85]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[86]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1, -1, 1 ]), Polynomial(K, [ 1/3*w, 1/3*w ]), 2>,
  elt<JK | Polynomial(K, [ -1/5, 2/5, 1 ]), Polynomial(K, [ 14/75*w, 37/75*w ]), 2>]);
Append(~Hps, [ 2, -1 ]);
DB[86]`JK_gens := JKgens; DB[86]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[87]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -2, 2, 1 ]), Polynomial(K, [ -1/3*w, 2/3*w ]), 2>,
  elt<JK | Polynomial(K, [ 3, 3, 1 ]), Polynomial(K, [ w, 1/3*w ]), 2>]);
Append(~Hps, [ 1, -1 ]);
DB[87]`JK_gens := JKgens; DB[87]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[88]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1, 1, 1 ]), Polynomial(K, [ 0, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 1, 0, 1 ]), Polynomial(K, [ -1 ]), 2>]);
Append(~Hps, [ 2, -1 ]);
DB[88]`JK_gens := JKgens; DB[88]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[89]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1, -1, 1 ]), Polynomial(K, [ 2, -1 ]), 2>,
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 0, 1 ]), 2>]);
Append(~Hps, [ 1, 1 ]);
DB[89]`JK_gens := JKgens; DB[89]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[90]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -2, 1 ]), Polynomial(K, [ 7, 0, 0, -1 ]), 2>,
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 1, 1 ]), 2>]);
Append(~Hps, [ 1, 0 ]);
DB[90]`JK_gens := JKgens; DB[90]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[91]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1, 1, 1 ]), Polynomial(K, [ 1, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 1, 1 ]), 2>]);
Append(~Hps, [ -2, 1 ]);
DB[91]`JK_gens := JKgens; DB[91]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[92]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -3/2, -3/2, 1 ]), Polynomial(K, [ -135/44*w, 59/44*w ]), 2>,
  elt<JK | Polynomial(K, [ 22/89, -220/89, 1 ]), Polynomial(K, [ -527/7921*w, 1366/87131*w ]), 2>]);
Append(~Hps, [ 1, 0 ]);
DB[92]`JK_gens := JKgens; DB[92]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[93]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1, 3, 1 ]), Polynomial(K, [ -2, -5 ]), 2>,
  elt<JK | Polynomial(K, [ -1, -2, 1 ]), Polynomial(K, [ -1, -2 ]), 2>]);
Append(~Hps, [ -2, -3 ]);
DB[93]`JK_gens := JKgens; DB[93]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[94]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1, 1 ]), Polynomial(K, [ 0, 0, 0, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 1, 1 ]), 2>]);
Append(~Hps, [ -1, 0 ]);
DB[94]`JK_gens := JKgens; DB[94]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[95]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1, 1 ]), Polynomial(K, [ -2 ]), 1>,
  elt<JK | Polynomial(K, [ 0, 1 ]), Polynomial(K, [ -2 ]), 1>]);
Append(~Hps, [ -3, -5 ]);
DB[95]`JK_gens := JKgens; DB[95]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[96]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ -1, 1, 1 ]), Polynomial(K, [ -8, 13 ]), 2>,
  elt<JK | Polynomial(K, [ -1/2, 0, 1 ]), Polynomial(K, [ 0, -1/2 ]), 2>]);
Append(~Hps, [ 2, 4 ]);
DB[96]`JK_gens := JKgens; DB[96]`H_points_MW := Hps;

JKgens := [* *]; Hps := [* *];
JK := Parent(DB[97]`H_points[1]); K := BaseField(JK); w := K.1;
Append(~JKgens, [
  elt<JK | Polynomial(K, [ 1, 1 ]), Polynomial(K, [ 0, 0, 0, 1 ]), 2>,
  elt<JK | Polynomial(K, [ 1 ]), Polynomial(K, [ 0, 0, 1, 1 ]), 2>]);
Append(~Hps, [ 3, -2 ]);
DB[97]`JK_gens := JKgens; DB[97]`H_points_MW := Hps;

// Add isotypical heights.
printf "filling in height info...\n";
hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.64821491142766153638, 0.13631698829688237077 ]);
DB[1]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.78705482990739594620, 0.046593892380861197687 ]);
DB[2]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.94584417860730116362, 0.91274988570776981262 ]);
DB[3]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.94584417860730116362, 0.91274988570776981262 ]);
DB[4]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.15853920882705508320, 1.1884262995731685773 ]);
DB[5]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.15853920882705508320, 1.1884262995731685773 ]);
DB[6]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.78243452993126520027, 0.60383843200381008215 ]);
DB[7]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 1.7599534383464393517, 0.17266952143921559943 ]);
DB[8]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.92021928425517742999, 0.69848344516729325366 ]);
DB[9]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 1.0655299009962999776, 0.73346424603276875327 ]);
DB[10]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.13883466389743225673, 0.016478557798793164239 ]);
DB[11]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.56259833184515622355, 0.071671193338177406350 ]);
DB[12]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.33845232535907521476, 0.60076310319343295067 ]);
DB[13]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.018080265253613587393, 0.11850931795987536605 ]);
DB[14]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.29968577618229988667, 0.19171758358803766170 ]);
DB[15]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.15943031200330308137, 0.058694058520883692393 ]);
DB[16]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.78314471490738026531, 0.32565002778582542989 ]);
DB[17]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 2.3688443881614323721, 0.39719093472882529106 ]);
DB[18]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 2.3688443881614323721, 0.39719093472882529106 ]);
DB[19]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.16877072967550035370, 0.24778171426932555401 ]);
DB[20]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.035163015709436961284, 0.10658237988177375701 ]);
DB[21]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.035163015709436961284, 0.10658237988177375701 ]);
DB[22]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.038327031968301260506, 0.11636239043761320091 ]);
DB[23]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.22666570099789410716, 0.039679726188689219318 ]);
DB[24]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.10477885866467097752, 0.074532385256611704246 ]);
DB[25]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 2.5375336644835612001, 0.23679039389178569188 ]);
DB[26]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.053236273446551586220, 0.18168544162082655829 ]);
DB[27]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 3.8657190316469938618, 0.39570608152479700338 ]);
DB[28]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.033548632652679095346, 0.042696535905227708419 ]);
DB[29]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.36689990567218991298, 0.027888557764858215406 ]);
DB[30]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 2.7048470150466821206, 0.44595361077841876477 ]);
DB[31]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.14072140034737190604, 0.19647565513151409478 ]);
DB[32]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.14072140034737190604, 0.19647565513151409478 ]);
DB[33]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.50931564800422090963, 0.011142486872006153349 ]);
DB[34]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.18013288208324615264, 0.19967551426411907713 ]);
DB[35]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.36947710097083240733, 0.067568049372339958182 ]);
DB[36]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.12160532314558753972, 0.17170359497184480483 ]);
DB[37]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.025099039265961304432, 0.13112289475843006126 ]);
DB[38]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.12110104079039279261, 0.16785225201945285659 ]);
DB[39]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.26868674946095106666, 0.041153005183636568699 ]);
DB[40]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.046691014439993108200, 0.011046626156300707759 ]);
DB[41]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.019766614503780949786, 0.11891455966660765896 ]);
DB[42]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.041646355847294273997, 0.13325220543595385753 ]);
DB[43]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.061867938735224103717, 0.11751704919763346379 ]);
DB[44]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.30199943215717631650, 0.046863574219264819155 ]);
DB[45]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.044094833121584722752, 0.13298542946366624714 ]);
DB[46]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.19154851608644374682, 0.016781183870778700301 ]);
DB[47]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.066050323556907684757, 0.029861291418765370064 ]);
DB[48]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.80524140112103022238, 0.041331610460999472392 ]);
DB[49]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.27137569563124218957, 0.013100433360256262171 ]);
DB[50]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.088716049380619132995, 0.14977329385436113251 ]);
DB[51]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.39333433120056096828, 0.010265702808528906923 ]);
DB[52]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.39333433120056096828, 0.010265702808528906923 ]);
DB[53]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.060058187308509682555, 0.40657202650454665528 ]);
DB[54]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.016789427218961203647, 0.050996961141413968569 ]);
DB[55]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.56002693870232272031, 0.021808837481232966751 ]);
DB[56]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.012467613878998689849, 0.060030487741746211522 ]);
DB[57]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.30210343873113546364, 0.035991730125739637897 ]);
DB[58]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.37821562534677313029, 0.014190604360366290857 ]);
DB[59]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.21369109355860845557, 0.42676719713043010820 ]);
DB[60]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.085595739976664400686, 0.014777694479283010849 ]);
DB[61]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.13716252657029125778, 0.0067806730186720842158 ]);
DB[62]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.13624261145546098506, 0.027076356865869622207 ]);
DB[63]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.30264825239668513973, 0.15046513745379105879 ]);
DB[64]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.048787662328310406222, 0.080805418487208906603 ]);
DB[65]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.048693987177345198590, 0.15950517249208593627 ]);
DB[66]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.26050392526777851854, 0.037911461603981181289 ]);
DB[67]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.13256235582644405445, 0.011472044204908529423 ]);
DB[68]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.10426089548815571766, 0.017150742854562092057 ]);
DB[69]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.062565764285104042508, 0.021906498252974817956 ]);
DB[70]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.020366261113192470036, 0.11150973502818996513 ]);
DB[71]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.18272286453614462707, 0.022904194034766556101 ]);
DB[72]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.021385458913276934992, 0.017783916625315611946 ]);
DB[73]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.29879031762894848783, 0.00021547978717959747588 ]);
DB[74]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 1.7779135993100755643, 0.052766903052063031048 ]);
DB[75]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.063570469365010025869, 0.061142172819766188122 ]);
DB[76]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.091417698455830638831, 0.044699030501295716124 ]);
Append(~hseq, [ 0.0032198246608621134870, 0.41440030571169777235 ]);
DB[77]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.057347745607044634128, 0.047717336513422242048 ]);
DB[78]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.15965119868263657114, 0.0013326833517410838248 ]);
DB[79]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.38057009842982544059, 0.19033649215499150315 ]);
DB[80]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.20924949313043825811, 0.19639084781977024116 ]);
DB[81]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.081172677931064433789, 0.0024526723998900119690 ]);
DB[82]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.19776218658007830695, 0.0030949061809824007071 ]);
DB[83]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.39623732659801293349, 0.0087968500589474967580 ]);
DB[84]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.023245469444663078813, 0.045311422338866104556 ]);
DB[85]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.11315255420284291637, 0.11509526253706630396 ]);
DB[86]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.39497161970409039614, 0.057853011464044091677 ]);
DB[87]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.083616546764941760238, 0.043470666141943331545 ]);
DB[88]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.11335201787956912364, 0.032326319303675437577 ]);
DB[89]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.052655007730975691291, 0.0060093068536710259397 ]);
DB[90]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.049920072545167496303, 0.014377102630350752006 ]);
DB[91]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.098587471231682373111, 0.12736539147741132151 ]);
DB[92]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.030585677965592063311, 0.0064426362151138446588 ]);
DB[93]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.0070617815637411233735, 0.041330755806826780924 ]);
DB[94]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.079565781853555909909, 0.00062540927059263125148 ]);
DB[95]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.13255239971181630762, 0.040068481450573472448 ]);
DB[96]`hseq := hseq;

hseq := [Parent([RealField(20)|])|];
Append(~hseq, [ 0.0015647260552383239399, 0.080589126331287433306 ]);
DB[97]`hseq := hseq;
