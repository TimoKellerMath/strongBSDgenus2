QQ := Rationals();
_<x> := PolynomialRing(QQ);

f := -10*(x^6 - 10*x^5 + 32*x^4 - 40*x^3 + 38*x^2 - 20*x + 4);
C := HyperellipticCurve(f);
E := EllipticCurve("3200o1");

K := KummerSurface(Jacobian(C));

/********************************************************************************
  "Nice" presentations of the number fields over which points of order 7 are
  defined.
********************************************************************************/

// The "nice" field extensions found in this file were constructed by using
// Magma's inbuilt OptimisedRepresentation and LLL intrinsics. We store them
// here in a way which will not change if these intrinsics are modified. For
// example The following was found by running "OptimisedRepresentation" and
// "LLL" on the ring of integers of the number field defined by:
// (x^2 + 5*x + 1)^3*(x^2 + 13*x + 49) - jInvariant(E)*x

bas := [
  x - 1,
  x^8 + 4*x^7 - 14*x^6 + 105*x^4 - 154*x^2 + 88*x + 9,
  x^8 + 4*x^7 - 56*x^4 - 896*x^2 - 448,
  x^8 + 4*x^7 - 14*x^6 - 56*x^5 + 147*x^4 + 672*x^3 + 350*x^2 - 1016*x - 1033,
  x^8 - 28*x^6 + 252*x^4 - 560*x^2 - 1728*x - 112,
  x^8 + 4*x^7 + 56*x^5 + 252*x^4 + 952*x^3 + 2800*x^2 + 3472*x + 5796,
  x^8 + 28*x^6 + 42*x^4 - 700*x^2 - 2624*x - 7287,
  x^8 + 4*x^7 - 112*x^5 - 994*x^4 - 1456*x^3 + 6832*x^2 + 4616*x - 45852
];

// The degree 8 number field over which E aquires a cyclic 7-isogeny (after
// a quadratic extension)
F := NumberField(bas[2]);
O := Order([Roots(g, F)[1][1] : g in bas] : IsBasis:=true); // IsMaximal(O);
F := FieldOfFractions(O);

// The degree 24 number field over which both E and Jac(C) aquire a 7-torsion
// point (after a quadratic extension)
_<y> := PolynomialRing(F);
h := y^3 - (2 + F.3)*y^2 + 2*F.3*y + 2*F.2;
L := ext<F | h>;


/********************************************************************************
  Explicit presentations for the points of order 7 on the Kummer line resp. 
  surface of E resp. Jac(C). 
********************************************************************************/

// Point of order 7 on E, projected to the Kummer line
x_P := [
  [ 5999108/2593703, 8947518/2593703, -552604/2593703, 3548914/2593703, 
  -3591614/2593703, 2318614/2593703, 4895118/2593703, 4589118/2593703 ],
  [ 4404164/2593703, 5352428/2593703, -3809892/2593703, -359708/2593703, 
  -3958340/2593703, 1157168/2593703, 3887588/2593703, 3703244/2593703 ],
  [ 529436/2593703, 33218/2593703, 384918/2593703, -670734/2593703, 
  645618/2593703, 1679176/2593703, -710344/2593703, -440838/2593703 ]
];
x_P := L![F!c : c in x_P];

// Point of order 7 on Jac(C), projected to the Kummer surface
x_Q := [
  [
    [ 1, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0 ]
  ],
  [
    [ 863727815221/288706192517, 628711372151/288706192517, 
      -142018240070/288706192517, 311491365043/288706192517, 
      -134391464431/288706192517, 290599634619/288706192517, 
      47841404401/288706192517, 93790833127/288706192517
    ],
    [ 217665111803/288706192517, -56896736687/288706192517, 
      -68628822671/288706192517, 73850820641/288706192517, 
      -46159552484/288706192517, -19574434211/288706192517, 
      -51044077057/288706192517, 2287424261/288706192517
    ],
    [ -48275401786/288706192517, -91646406875/288706192517, 
      52452221739/288706192517, -73432271480/288706192517, 
      31866196146/288706192517, -17661774244/288706192517, 
      6515558013/288706192517, -16144620295/288706192517
    ]
  ],
  [
    [ 560645906345/288706192517, 178577390465/288706192517, 
      -145394739150/288706192517, 248301914131/288706192517, 
      -3415426267/288706192517, 271833807923/288706192517, 
      23453997099/288706192517, 65601661147/288706192517
    ],
    [ 8616174188/288706192517, 30880062056/288706192517, 
      -87251409775/288706192517, 100787412488/288706192517, 
      45529931814/288706192517, 9738648478/288706192517, 
      -131136482730/288706192517, -26167896092/288706192517
    ],
    [ -71971346027/288706192517, -66354411560/288706192517, 
       84599207913/288706192517, -58025577700/288706192517, 
       -6919653025/288706192517, -44322573779/288706192517, 
       49175511911/288706192517, -9907217115/288706192517
    ]
  ],
  [
    [ 434662659713920/2020943347619, -26216022584960/2020943347619, 
      -17058472713920/2020943347619, 65730188692480/2020943347619, 
      52268165825480/2020943347619, 59646599058360/2020943347619, 
      22931709354560/2020943347619, 36188975927520/2020943347619
    ],
    [ -130618373178640/2020943347619, 60681976028960/2020943347619, 
      -96756863633720/2020943347619, 35426268989480/2020943347619, 
      -15925918988600/2020943347619, 35562685212520/2020943347619, 
      -82815987367480/2020943347619, -32973668326800/2020943347619
    ],
    [ 24987979020680/2020943347619, -34409811215100/2020943347619, 
      60100501528840/2020943347619, -17570421489220/2020943347619, 
      7198121982560/2020943347619, -29283812694560/2020943347619, 
      35826396998080/2020943347619, 8195570394940/2020943347619
    ]
  ]
];
x_Q := [L![F!c : c in x_Q[i]] : i in [1..4]];


/********************************************************************************
  Proof that these points define the number field L and that they have order 7
********************************************************************************/

// First on E/{+-1}
assert Degree(MinimalPolynomial(x_P, QQ)) eq 24; // Check it is a generator for L
assert Evaluate(DivisionPolynomial(E, 7), x_P) eq 0; // Check it has order 7

// Now on K
K_L := BaseChange(K, L);
assert Degree(MinimalPolynomial(x_Q[2], QQ)) eq 24; // Check it is a generator for L
x_Q := K_L!x_Q;  assert x_Q ne K_L!0; // Check it is not the identity
assert 7*x_Q eq K_L!0; // Check it is a point of order 7


/********************************************************************************
  Proof that the quadratic twist is correct
********************************************************************************/

p := 11;

for d in [-1,-5,2,10] do 
  C_Fp := ChangeRing(C, GF(p));

  N1 := #Points(C_Fp);
  N2 := #Points(BaseChange(C_Fp, GF(p^2)));

  tp := p + 1 - N1;
  np := (N1^2 + N2)/2 - (p + 1)*N1 - p;

  ap := TraceOfFrobenius(QuadraticTwist(E,d), p);

  assert Integers()!(ap^2 - tp*ap + np) mod 7 ne 0;
end for;

p := 17;

for d in [-10,5] do 
  C_Fp := ChangeRing(C, GF(p));

  N1 := #Points(C_Fp);
  N2 := #Points(BaseChange(C_Fp, GF(p^2)));

  tp := p + 1 - N1;
  np := (N1^2 + N2)/2 - (p + 1)*N1 - p;

  ap := TraceOfFrobenius(QuadraticTwist(E,d), p);

  assert Integers()!(ap^2 - tp*ap + np) mod 7 ne 0;
end for;

p := 23;

for d in [-2] do 
  C_Fp := ChangeRing(C, GF(p));

  N1 := #Points(C_Fp);
  N2 := #Points(BaseChange(C_Fp, GF(p^2)));

  tp := p + 1 - N1;
  np := (N1^2 + N2)/2 - (p + 1)*N1 - p;

  ap := TraceOfFrobenius(QuadraticTwist(E,d), p);

  assert Integers()!(ap^2 - tp*ap + np) mod 7 ne 0;
end for;
